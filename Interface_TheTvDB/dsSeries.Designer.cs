//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Interface_TheTvDB {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSeries")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSeries : global::System.Data.DataSet {
        
        private SER_SeriesDataTable tableSER_Series;
        
        private SEA_SeasonsDataTable tableSEA_Seasons;
        
        private EPI_EpisodesDataTable tableEPI_Episodes;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsSeries() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsSeries(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SER_Series"] != null)) {
                    base.Tables.Add(new SER_SeriesDataTable(ds.Tables["SER_Series"]));
                }
                if ((ds.Tables["SEA_Seasons"] != null)) {
                    base.Tables.Add(new SEA_SeasonsDataTable(ds.Tables["SEA_Seasons"]));
                }
                if ((ds.Tables["EPI_Episodes"] != null)) {
                    base.Tables.Add(new EPI_EpisodesDataTable(ds.Tables["EPI_Episodes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SER_SeriesDataTable SER_Series {
            get {
                return this.tableSER_Series;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SEA_SeasonsDataTable SEA_Seasons {
            get {
                return this.tableSEA_Seasons;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EPI_EpisodesDataTable EPI_Episodes {
            get {
                return this.tableEPI_Episodes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsSeries cln = ((dsSeries)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SER_Series"] != null)) {
                    base.Tables.Add(new SER_SeriesDataTable(ds.Tables["SER_Series"]));
                }
                if ((ds.Tables["SEA_Seasons"] != null)) {
                    base.Tables.Add(new SEA_SeasonsDataTable(ds.Tables["SEA_Seasons"]));
                }
                if ((ds.Tables["EPI_Episodes"] != null)) {
                    base.Tables.Add(new EPI_EpisodesDataTable(ds.Tables["EPI_Episodes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSER_Series = ((SER_SeriesDataTable)(base.Tables["SER_Series"]));
            if ((initTable == true)) {
                if ((this.tableSER_Series != null)) {
                    this.tableSER_Series.InitVars();
                }
            }
            this.tableSEA_Seasons = ((SEA_SeasonsDataTable)(base.Tables["SEA_Seasons"]));
            if ((initTable == true)) {
                if ((this.tableSEA_Seasons != null)) {
                    this.tableSEA_Seasons.InitVars();
                }
            }
            this.tableEPI_Episodes = ((EPI_EpisodesDataTable)(base.Tables["EPI_Episodes"]));
            if ((initTable == true)) {
                if ((this.tableEPI_Episodes != null)) {
                    this.tableEPI_Episodes.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsSeries";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSeries.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSER_Series = new SER_SeriesDataTable();
            base.Tables.Add(this.tableSER_Series);
            this.tableSEA_Seasons = new SEA_SeasonsDataTable();
            base.Tables.Add(this.tableSEA_Seasons);
            this.tableEPI_Episodes = new EPI_EpisodesDataTable();
            base.Tables.Add(this.tableEPI_Episodes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSER_Series() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSEA_Seasons() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEPI_Episodes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSeries ds = new dsSeries();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SER_SeriesRowChangeEventHandler(object sender, SER_SeriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SEA_SeasonsRowChangeEventHandler(object sender, SEA_SeasonsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EPI_EpisodesRowChangeEventHandler(object sender, EPI_EpisodesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SER_SeriesDataTable : global::System.Data.TypedTableBase<SER_SeriesRow> {
            
            private global::System.Data.DataColumn columnSER_ID;
            
            private global::System.Data.DataColumn columnSER_Created;
            
            private global::System.Data.DataColumn columnSER_Changed;
            
            private global::System.Data.DataColumn columnSER_Deleted;
            
            private global::System.Data.DataColumn columnSER_theTVDB_ID;
            
            private global::System.Data.DataColumn columnSER_Zap2It_ID;
            
            private global::System.Data.DataColumn columnSER_imdb_ID;
            
            private global::System.Data.DataColumn columnSER_Name_German;
            
            private global::System.Data.DataColumn columnSER_Name_English;
            
            private global::System.Data.DataColumn columnSER_DescriptionShort_German;
            
            private global::System.Data.DataColumn columnSER_DescriptionShort_English;
            
            private global::System.Data.DataColumn columnSER_Description_German;
            
            private global::System.Data.DataColumn columnSER_Description_English;
            
            private global::System.Data.DataColumn columnSER_FirstAired_German;
            
            private global::System.Data.DataColumn columnSER_FirstAired_English;
            
            private global::System.Data.DataColumn columnSER_Rate;
            
            private global::System.Data.DataColumn columnSER_RateCount;
            
            private global::System.Data.DataColumn columnSER_imdb_Rate;
            
            private global::System.Data.DataColumn columnSER_imdb_RateCount;
            
            private global::System.Data.DataColumn columnSER_RunTime;
            
            private global::System.Data.DataColumn columnSER_State;
            
            private global::System.Data.DataColumn columnSER_Soundtrack;
            
            private global::System.Data.DataColumn columnSER_Trailer;
            
            private global::System.Data.DataColumn columnSER_ProductionDateFrom;
            
            private global::System.Data.DataColumn columnSER_ProductionDateTo;
            
            private global::System.Data.DataColumn columnSER_Country;
            
            private global::System.Data.DataColumn columnSER_Languages;
            
            private global::System.Data.DataColumn columnSER_Awards;
            
            private global::System.Data.DataColumn columnSER_Website;
            
            private global::System.Data.DataColumn columnSER_Facebook;
            
            private global::System.Data.DataColumn columnSER_Twitter;
            
            private global::System.Data.DataColumn columnSER_ImageLink;
            
            private global::System.Data.DataColumn columnSER_SeasonCount;
            
            private global::System.Data.DataColumn columnSER_EpisodesCount;
            
            private global::System.Data.DataColumn columnSER_FavouritesCount;
            
            private global::System.Data.DataColumn columnSER_DIR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesDataTable() {
                this.TableName = "SER_Series";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SER_SeriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SER_SeriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_IDColumn {
                get {
                    return this.columnSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_CreatedColumn {
                get {
                    return this.columnSER_Created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_ChangedColumn {
                get {
                    return this.columnSER_Changed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_DeletedColumn {
                get {
                    return this.columnSER_Deleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_theTVDB_IDColumn {
                get {
                    return this.columnSER_theTVDB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_Zap2It_IDColumn {
                get {
                    return this.columnSER_Zap2It_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_imdb_IDColumn {
                get {
                    return this.columnSER_imdb_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_Name_GermanColumn {
                get {
                    return this.columnSER_Name_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_Name_EnglishColumn {
                get {
                    return this.columnSER_Name_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_DescriptionShort_GermanColumn {
                get {
                    return this.columnSER_DescriptionShort_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_DescriptionShort_EnglishColumn {
                get {
                    return this.columnSER_DescriptionShort_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_Description_GermanColumn {
                get {
                    return this.columnSER_Description_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_Description_EnglishColumn {
                get {
                    return this.columnSER_Description_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_FirstAired_GermanColumn {
                get {
                    return this.columnSER_FirstAired_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_FirstAired_EnglishColumn {
                get {
                    return this.columnSER_FirstAired_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_RateColumn {
                get {
                    return this.columnSER_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_RateCountColumn {
                get {
                    return this.columnSER_RateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_imdb_RateColumn {
                get {
                    return this.columnSER_imdb_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_imdb_RateCountColumn {
                get {
                    return this.columnSER_imdb_RateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_RunTimeColumn {
                get {
                    return this.columnSER_RunTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_StateColumn {
                get {
                    return this.columnSER_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_SoundtrackColumn {
                get {
                    return this.columnSER_Soundtrack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_TrailerColumn {
                get {
                    return this.columnSER_Trailer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_ProductionDateFromColumn {
                get {
                    return this.columnSER_ProductionDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_ProductionDateToColumn {
                get {
                    return this.columnSER_ProductionDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_CountryColumn {
                get {
                    return this.columnSER_Country;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_LanguagesColumn {
                get {
                    return this.columnSER_Languages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_AwardsColumn {
                get {
                    return this.columnSER_Awards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_WebsiteColumn {
                get {
                    return this.columnSER_Website;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_FacebookColumn {
                get {
                    return this.columnSER_Facebook;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_TwitterColumn {
                get {
                    return this.columnSER_Twitter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_ImageLinkColumn {
                get {
                    return this.columnSER_ImageLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_SeasonCountColumn {
                get {
                    return this.columnSER_SeasonCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_EpisodesCountColumn {
                get {
                    return this.columnSER_EpisodesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_FavouritesCountColumn {
                get {
                    return this.columnSER_FavouritesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SER_DIRColumn {
                get {
                    return this.columnSER_DIR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesRow this[int index] {
                get {
                    return ((SER_SeriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SER_SeriesRowChangeEventHandler SER_SeriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SER_SeriesRowChangeEventHandler SER_SeriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SER_SeriesRowChangeEventHandler SER_SeriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SER_SeriesRowChangeEventHandler SER_SeriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSER_SeriesRow(SER_SeriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesRow AddSER_SeriesRow(
                        string SER_ID, 
                        System.DateTime SER_Created, 
                        System.DateTime SER_Changed, 
                        System.DateTime SER_Deleted, 
                        string SER_theTVDB_ID, 
                        string SER_Zap2It_ID, 
                        string SER_imdb_ID, 
                        string SER_Name_German, 
                        string SER_Name_English, 
                        string SER_DescriptionShort_German, 
                        string SER_DescriptionShort_English, 
                        string SER_Description_German, 
                        string SER_Description_English, 
                        System.DateTime SER_FirstAired_German, 
                        System.DateTime SER_FirstAired_English, 
                        double SER_Rate, 
                        int SER_RateCount, 
                        double SER_imdb_Rate, 
                        int SER_imdb_RateCount, 
                        int SER_RunTime, 
                        string SER_State, 
                        string SER_Soundtrack, 
                        string SER_Trailer, 
                        System.DateTime SER_ProductionDateFrom, 
                        System.DateTime SER_ProductionDateTo, 
                        string SER_Country, 
                        string SER_Languages, 
                        string SER_Awards, 
                        string SER_Website, 
                        string SER_Facebook, 
                        string SER_Twitter, 
                        string SER_ImageLink, 
                        int SER_SeasonCount, 
                        int SER_EpisodesCount, 
                        int SER_FavouritesCount, 
                        string SER_DIR) {
                SER_SeriesRow rowSER_SeriesRow = ((SER_SeriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SER_ID,
                        SER_Created,
                        SER_Changed,
                        SER_Deleted,
                        SER_theTVDB_ID,
                        SER_Zap2It_ID,
                        SER_imdb_ID,
                        SER_Name_German,
                        SER_Name_English,
                        SER_DescriptionShort_German,
                        SER_DescriptionShort_English,
                        SER_Description_German,
                        SER_Description_English,
                        SER_FirstAired_German,
                        SER_FirstAired_English,
                        SER_Rate,
                        SER_RateCount,
                        SER_imdb_Rate,
                        SER_imdb_RateCount,
                        SER_RunTime,
                        SER_State,
                        SER_Soundtrack,
                        SER_Trailer,
                        SER_ProductionDateFrom,
                        SER_ProductionDateTo,
                        SER_Country,
                        SER_Languages,
                        SER_Awards,
                        SER_Website,
                        SER_Facebook,
                        SER_Twitter,
                        SER_ImageLink,
                        SER_SeasonCount,
                        SER_EpisodesCount,
                        SER_FavouritesCount,
                        SER_DIR};
                rowSER_SeriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSER_SeriesRow);
                return rowSER_SeriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesRow FindBySER_ID(string SER_ID) {
                return ((SER_SeriesRow)(this.Rows.Find(new object[] {
                            SER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SER_SeriesDataTable cln = ((SER_SeriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SER_SeriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSER_ID = base.Columns["SER_ID"];
                this.columnSER_Created = base.Columns["SER_Created"];
                this.columnSER_Changed = base.Columns["SER_Changed"];
                this.columnSER_Deleted = base.Columns["SER_Deleted"];
                this.columnSER_theTVDB_ID = base.Columns["SER_theTVDB_ID"];
                this.columnSER_Zap2It_ID = base.Columns["SER_Zap2It_ID"];
                this.columnSER_imdb_ID = base.Columns["SER_imdb_ID"];
                this.columnSER_Name_German = base.Columns["SER_Name_German"];
                this.columnSER_Name_English = base.Columns["SER_Name_English"];
                this.columnSER_DescriptionShort_German = base.Columns["SER_DescriptionShort_German"];
                this.columnSER_DescriptionShort_English = base.Columns["SER_DescriptionShort_English"];
                this.columnSER_Description_German = base.Columns["SER_Description_German"];
                this.columnSER_Description_English = base.Columns["SER_Description_English"];
                this.columnSER_FirstAired_German = base.Columns["SER_FirstAired_German"];
                this.columnSER_FirstAired_English = base.Columns["SER_FirstAired_English"];
                this.columnSER_Rate = base.Columns["SER_Rate"];
                this.columnSER_RateCount = base.Columns["SER_RateCount"];
                this.columnSER_imdb_Rate = base.Columns["SER_imdb_Rate"];
                this.columnSER_imdb_RateCount = base.Columns["SER_imdb_RateCount"];
                this.columnSER_RunTime = base.Columns["SER_RunTime"];
                this.columnSER_State = base.Columns["SER_State"];
                this.columnSER_Soundtrack = base.Columns["SER_Soundtrack"];
                this.columnSER_Trailer = base.Columns["SER_Trailer"];
                this.columnSER_ProductionDateFrom = base.Columns["SER_ProductionDateFrom"];
                this.columnSER_ProductionDateTo = base.Columns["SER_ProductionDateTo"];
                this.columnSER_Country = base.Columns["SER_Country"];
                this.columnSER_Languages = base.Columns["SER_Languages"];
                this.columnSER_Awards = base.Columns["SER_Awards"];
                this.columnSER_Website = base.Columns["SER_Website"];
                this.columnSER_Facebook = base.Columns["SER_Facebook"];
                this.columnSER_Twitter = base.Columns["SER_Twitter"];
                this.columnSER_ImageLink = base.Columns["SER_ImageLink"];
                this.columnSER_SeasonCount = base.Columns["SER_SeasonCount"];
                this.columnSER_EpisodesCount = base.Columns["SER_EpisodesCount"];
                this.columnSER_FavouritesCount = base.Columns["SER_FavouritesCount"];
                this.columnSER_DIR = base.Columns["SER_DIR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSER_ID = new global::System.Data.DataColumn("SER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_ID);
                this.columnSER_Created = new global::System.Data.DataColumn("SER_Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Created);
                this.columnSER_Changed = new global::System.Data.DataColumn("SER_Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Changed);
                this.columnSER_Deleted = new global::System.Data.DataColumn("SER_Deleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Deleted);
                this.columnSER_theTVDB_ID = new global::System.Data.DataColumn("SER_theTVDB_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_theTVDB_ID);
                this.columnSER_Zap2It_ID = new global::System.Data.DataColumn("SER_Zap2It_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Zap2It_ID);
                this.columnSER_imdb_ID = new global::System.Data.DataColumn("SER_imdb_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_imdb_ID);
                this.columnSER_Name_German = new global::System.Data.DataColumn("SER_Name_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Name_German);
                this.columnSER_Name_English = new global::System.Data.DataColumn("SER_Name_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Name_English);
                this.columnSER_DescriptionShort_German = new global::System.Data.DataColumn("SER_DescriptionShort_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_DescriptionShort_German);
                this.columnSER_DescriptionShort_English = new global::System.Data.DataColumn("SER_DescriptionShort_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_DescriptionShort_English);
                this.columnSER_Description_German = new global::System.Data.DataColumn("SER_Description_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Description_German);
                this.columnSER_Description_English = new global::System.Data.DataColumn("SER_Description_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Description_English);
                this.columnSER_FirstAired_German = new global::System.Data.DataColumn("SER_FirstAired_German", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_FirstAired_German);
                this.columnSER_FirstAired_English = new global::System.Data.DataColumn("SER_FirstAired_English", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_FirstAired_English);
                this.columnSER_Rate = new global::System.Data.DataColumn("SER_Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Rate);
                this.columnSER_RateCount = new global::System.Data.DataColumn("SER_RateCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_RateCount);
                this.columnSER_imdb_Rate = new global::System.Data.DataColumn("SER_imdb_Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_imdb_Rate);
                this.columnSER_imdb_RateCount = new global::System.Data.DataColumn("SER_imdb_RateCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_imdb_RateCount);
                this.columnSER_RunTime = new global::System.Data.DataColumn("SER_RunTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_RunTime);
                this.columnSER_State = new global::System.Data.DataColumn("SER_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_State);
                this.columnSER_Soundtrack = new global::System.Data.DataColumn("SER_Soundtrack", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Soundtrack);
                this.columnSER_Trailer = new global::System.Data.DataColumn("SER_Trailer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Trailer);
                this.columnSER_ProductionDateFrom = new global::System.Data.DataColumn("SER_ProductionDateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_ProductionDateFrom);
                this.columnSER_ProductionDateTo = new global::System.Data.DataColumn("SER_ProductionDateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_ProductionDateTo);
                this.columnSER_Country = new global::System.Data.DataColumn("SER_Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Country);
                this.columnSER_Languages = new global::System.Data.DataColumn("SER_Languages", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Languages);
                this.columnSER_Awards = new global::System.Data.DataColumn("SER_Awards", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Awards);
                this.columnSER_Website = new global::System.Data.DataColumn("SER_Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Website);
                this.columnSER_Facebook = new global::System.Data.DataColumn("SER_Facebook", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Facebook);
                this.columnSER_Twitter = new global::System.Data.DataColumn("SER_Twitter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_Twitter);
                this.columnSER_ImageLink = new global::System.Data.DataColumn("SER_ImageLink", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_ImageLink);
                this.columnSER_SeasonCount = new global::System.Data.DataColumn("SER_SeasonCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_SeasonCount);
                this.columnSER_EpisodesCount = new global::System.Data.DataColumn("SER_EpisodesCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_EpisodesCount);
                this.columnSER_FavouritesCount = new global::System.Data.DataColumn("SER_FavouritesCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_FavouritesCount);
                this.columnSER_DIR = new global::System.Data.DataColumn("SER_DIR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER_DIR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSER_ID}, true));
                this.columnSER_ID.AllowDBNull = false;
                this.columnSER_ID.Unique = true;
                this.columnSER_ID.MaxLength = 255;
                this.columnSER_Created.AllowDBNull = false;
                this.columnSER_theTVDB_ID.MaxLength = 100;
                this.columnSER_Zap2It_ID.MaxLength = 100;
                this.columnSER_imdb_ID.MaxLength = 100;
                this.columnSER_Name_German.MaxLength = 250;
                this.columnSER_Name_English.MaxLength = 250;
                this.columnSER_DescriptionShort_German.MaxLength = 2147483647;
                this.columnSER_DescriptionShort_English.MaxLength = 2147483647;
                this.columnSER_Description_German.MaxLength = 2147483647;
                this.columnSER_Description_English.MaxLength = 2147483647;
                this.columnSER_State.MaxLength = 100;
                this.columnSER_Soundtrack.MaxLength = 2147483647;
                this.columnSER_Trailer.MaxLength = 2147483647;
                this.columnSER_Country.MaxLength = 250;
                this.columnSER_Languages.MaxLength = 250;
                this.columnSER_Awards.MaxLength = 2147483647;
                this.columnSER_Website.MaxLength = 2147483647;
                this.columnSER_Facebook.MaxLength = 2147483647;
                this.columnSER_Twitter.MaxLength = 2147483647;
                this.columnSER_ImageLink.MaxLength = 2147483647;
                this.columnSER_DIR.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesRow NewSER_SeriesRow() {
                return ((SER_SeriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SER_SeriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SER_SeriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SER_SeriesRowChanged != null)) {
                    this.SER_SeriesRowChanged(this, new SER_SeriesRowChangeEvent(((SER_SeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SER_SeriesRowChanging != null)) {
                    this.SER_SeriesRowChanging(this, new SER_SeriesRowChangeEvent(((SER_SeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SER_SeriesRowDeleted != null)) {
                    this.SER_SeriesRowDeleted(this, new SER_SeriesRowChangeEvent(((SER_SeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SER_SeriesRowDeleting != null)) {
                    this.SER_SeriesRowDeleting(this, new SER_SeriesRowChangeEvent(((SER_SeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSER_SeriesRow(SER_SeriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSeries ds = new dsSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SER_SeriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SEA_SeasonsDataTable : global::System.Data.TypedTableBase<SEA_SeasonsRow> {
            
            private global::System.Data.DataColumn columnSEA_ID;
            
            private global::System.Data.DataColumn columnSEA_Created;
            
            private global::System.Data.DataColumn columnSEA_Changed;
            
            private global::System.Data.DataColumn columnSEA_Deleted;
            
            private global::System.Data.DataColumn columnSEA_theTVDB_ID;
            
            private global::System.Data.DataColumn columnSEA_imdb_ID;
            
            private global::System.Data.DataColumn columnSEA_SER;
            
            private global::System.Data.DataColumn columnSEA_Name_German;
            
            private global::System.Data.DataColumn columnSEA_Name_English;
            
            private global::System.Data.DataColumn columnSEA_Number;
            
            private global::System.Data.DataColumn columnSEA_OrderNumber;
            
            private global::System.Data.DataColumn columnSEA_EpisodesCount;
            
            private global::System.Data.DataColumn columnSEA_Description_German;
            
            private global::System.Data.DataColumn columnSEA_Description_English;
            
            private global::System.Data.DataColumn columnSEA_NumberText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsDataTable() {
                this.TableName = "SEA_Seasons";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SEA_SeasonsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SEA_SeasonsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_IDColumn {
                get {
                    return this.columnSEA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_CreatedColumn {
                get {
                    return this.columnSEA_Created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_ChangedColumn {
                get {
                    return this.columnSEA_Changed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_DeletedColumn {
                get {
                    return this.columnSEA_Deleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_theTVDB_IDColumn {
                get {
                    return this.columnSEA_theTVDB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_imdb_IDColumn {
                get {
                    return this.columnSEA_imdb_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_SERColumn {
                get {
                    return this.columnSEA_SER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_Name_GermanColumn {
                get {
                    return this.columnSEA_Name_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_Name_EnglishColumn {
                get {
                    return this.columnSEA_Name_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_NumberColumn {
                get {
                    return this.columnSEA_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_OrderNumberColumn {
                get {
                    return this.columnSEA_OrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_EpisodesCountColumn {
                get {
                    return this.columnSEA_EpisodesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_Description_GermanColumn {
                get {
                    return this.columnSEA_Description_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_Description_EnglishColumn {
                get {
                    return this.columnSEA_Description_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEA_NumberTextColumn {
                get {
                    return this.columnSEA_NumberText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsRow this[int index] {
                get {
                    return ((SEA_SeasonsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SEA_SeasonsRowChangeEventHandler SEA_SeasonsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SEA_SeasonsRowChangeEventHandler SEA_SeasonsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SEA_SeasonsRowChangeEventHandler SEA_SeasonsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SEA_SeasonsRowChangeEventHandler SEA_SeasonsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSEA_SeasonsRow(SEA_SeasonsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsRow AddSEA_SeasonsRow(string SEA_ID, System.DateTime SEA_Created, System.DateTime SEA_Changed, System.DateTime SEA_Deleted, string SEA_theTVDB_ID, string SEA_imdb_ID, string SEA_SER, string SEA_Name_German, string SEA_Name_English, int SEA_Number, int SEA_OrderNumber, int SEA_EpisodesCount, string SEA_Description_German, string SEA_Description_English, string SEA_NumberText) {
                SEA_SeasonsRow rowSEA_SeasonsRow = ((SEA_SeasonsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SEA_ID,
                        SEA_Created,
                        SEA_Changed,
                        SEA_Deleted,
                        SEA_theTVDB_ID,
                        SEA_imdb_ID,
                        SEA_SER,
                        SEA_Name_German,
                        SEA_Name_English,
                        SEA_Number,
                        SEA_OrderNumber,
                        SEA_EpisodesCount,
                        SEA_Description_German,
                        SEA_Description_English,
                        SEA_NumberText};
                rowSEA_SeasonsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSEA_SeasonsRow);
                return rowSEA_SeasonsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsRow FindBySEA_ID(string SEA_ID) {
                return ((SEA_SeasonsRow)(this.Rows.Find(new object[] {
                            SEA_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SEA_SeasonsDataTable cln = ((SEA_SeasonsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SEA_SeasonsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSEA_ID = base.Columns["SEA_ID"];
                this.columnSEA_Created = base.Columns["SEA_Created"];
                this.columnSEA_Changed = base.Columns["SEA_Changed"];
                this.columnSEA_Deleted = base.Columns["SEA_Deleted"];
                this.columnSEA_theTVDB_ID = base.Columns["SEA_theTVDB_ID"];
                this.columnSEA_imdb_ID = base.Columns["SEA_imdb_ID"];
                this.columnSEA_SER = base.Columns["SEA_SER"];
                this.columnSEA_Name_German = base.Columns["SEA_Name_German"];
                this.columnSEA_Name_English = base.Columns["SEA_Name_English"];
                this.columnSEA_Number = base.Columns["SEA_Number"];
                this.columnSEA_OrderNumber = base.Columns["SEA_OrderNumber"];
                this.columnSEA_EpisodesCount = base.Columns["SEA_EpisodesCount"];
                this.columnSEA_Description_German = base.Columns["SEA_Description_German"];
                this.columnSEA_Description_English = base.Columns["SEA_Description_English"];
                this.columnSEA_NumberText = base.Columns["SEA_NumberText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSEA_ID = new global::System.Data.DataColumn("SEA_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_ID);
                this.columnSEA_Created = new global::System.Data.DataColumn("SEA_Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Created);
                this.columnSEA_Changed = new global::System.Data.DataColumn("SEA_Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Changed);
                this.columnSEA_Deleted = new global::System.Data.DataColumn("SEA_Deleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Deleted);
                this.columnSEA_theTVDB_ID = new global::System.Data.DataColumn("SEA_theTVDB_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_theTVDB_ID);
                this.columnSEA_imdb_ID = new global::System.Data.DataColumn("SEA_imdb_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_imdb_ID);
                this.columnSEA_SER = new global::System.Data.DataColumn("SEA_SER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_SER);
                this.columnSEA_Name_German = new global::System.Data.DataColumn("SEA_Name_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Name_German);
                this.columnSEA_Name_English = new global::System.Data.DataColumn("SEA_Name_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Name_English);
                this.columnSEA_Number = new global::System.Data.DataColumn("SEA_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Number);
                this.columnSEA_OrderNumber = new global::System.Data.DataColumn("SEA_OrderNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_OrderNumber);
                this.columnSEA_EpisodesCount = new global::System.Data.DataColumn("SEA_EpisodesCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_EpisodesCount);
                this.columnSEA_Description_German = new global::System.Data.DataColumn("SEA_Description_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Description_German);
                this.columnSEA_Description_English = new global::System.Data.DataColumn("SEA_Description_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_Description_English);
                this.columnSEA_NumberText = new global::System.Data.DataColumn("SEA_NumberText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEA_NumberText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSEA_ID}, true));
                this.columnSEA_ID.AllowDBNull = false;
                this.columnSEA_ID.Unique = true;
                this.columnSEA_ID.MaxLength = 255;
                this.columnSEA_Created.AllowDBNull = false;
                this.columnSEA_theTVDB_ID.MaxLength = 100;
                this.columnSEA_imdb_ID.MaxLength = 100;
                this.columnSEA_SER.MaxLength = 100;
                this.columnSEA_Name_German.MaxLength = 100;
                this.columnSEA_Name_English.MaxLength = 100;
                this.columnSEA_Description_German.MaxLength = 2147483647;
                this.columnSEA_Description_English.MaxLength = 2147483647;
                this.columnSEA_NumberText.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsRow NewSEA_SeasonsRow() {
                return ((SEA_SeasonsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SEA_SeasonsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SEA_SeasonsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SEA_SeasonsRowChanged != null)) {
                    this.SEA_SeasonsRowChanged(this, new SEA_SeasonsRowChangeEvent(((SEA_SeasonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SEA_SeasonsRowChanging != null)) {
                    this.SEA_SeasonsRowChanging(this, new SEA_SeasonsRowChangeEvent(((SEA_SeasonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SEA_SeasonsRowDeleted != null)) {
                    this.SEA_SeasonsRowDeleted(this, new SEA_SeasonsRowChangeEvent(((SEA_SeasonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SEA_SeasonsRowDeleting != null)) {
                    this.SEA_SeasonsRowDeleting(this, new SEA_SeasonsRowChangeEvent(((SEA_SeasonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSEA_SeasonsRow(SEA_SeasonsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSeries ds = new dsSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SEA_SeasonsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EPI_EpisodesDataTable : global::System.Data.TypedTableBase<EPI_EpisodesRow> {
            
            private global::System.Data.DataColumn columnEPI_ID;
            
            private global::System.Data.DataColumn columnEPI_Created;
            
            private global::System.Data.DataColumn columnEPI_Changed;
            
            private global::System.Data.DataColumn columnEPI_Deleted;
            
            private global::System.Data.DataColumn columnEPI_theTVDB_ID;
            
            private global::System.Data.DataColumn columnEPI_imdb_ID;
            
            private global::System.Data.DataColumn columnEPI_SEA;
            
            private global::System.Data.DataColumn columnEPI_Name_German;
            
            private global::System.Data.DataColumn columnEPI_Name_English;
            
            private global::System.Data.DataColumn columnEPI_DescriptionShort_German;
            
            private global::System.Data.DataColumn columnEPI_DescriptionShort_English;
            
            private global::System.Data.DataColumn columnEPI_Description_German;
            
            private global::System.Data.DataColumn columnEPI_Description_English;
            
            private global::System.Data.DataColumn columnEPI_FirstAired_German;
            
            private global::System.Data.DataColumn columnEPI_FirstAired_English;
            
            private global::System.Data.DataColumn columnEPI_Rate;
            
            private global::System.Data.DataColumn columnEPI_RateCount;
            
            private global::System.Data.DataColumn columnEPI_imdb_Rate;
            
            private global::System.Data.DataColumn columnEPI_imdb_RateCount;
            
            private global::System.Data.DataColumn columnEPI_WatchedCount;
            
            private global::System.Data.DataColumn columnEPI_Number;
            
            private global::System.Data.DataColumn columnEPI_NumberOfSeason;
            
            private global::System.Data.DataColumn columnEPI_NumberText;
            
            private global::System.Data.DataColumn columnEPI_Languages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesDataTable() {
                this.TableName = "EPI_Episodes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPI_EpisodesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EPI_EpisodesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_IDColumn {
                get {
                    return this.columnEPI_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_CreatedColumn {
                get {
                    return this.columnEPI_Created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_ChangedColumn {
                get {
                    return this.columnEPI_Changed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_DeletedColumn {
                get {
                    return this.columnEPI_Deleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_theTVDB_IDColumn {
                get {
                    return this.columnEPI_theTVDB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_imdb_IDColumn {
                get {
                    return this.columnEPI_imdb_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_SEAColumn {
                get {
                    return this.columnEPI_SEA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_Name_GermanColumn {
                get {
                    return this.columnEPI_Name_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_Name_EnglishColumn {
                get {
                    return this.columnEPI_Name_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_DescriptionShort_GermanColumn {
                get {
                    return this.columnEPI_DescriptionShort_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_DescriptionShort_EnglishColumn {
                get {
                    return this.columnEPI_DescriptionShort_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_Description_GermanColumn {
                get {
                    return this.columnEPI_Description_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_Description_EnglishColumn {
                get {
                    return this.columnEPI_Description_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_FirstAired_GermanColumn {
                get {
                    return this.columnEPI_FirstAired_German;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_FirstAired_EnglishColumn {
                get {
                    return this.columnEPI_FirstAired_English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_RateColumn {
                get {
                    return this.columnEPI_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_RateCountColumn {
                get {
                    return this.columnEPI_RateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_imdb_RateColumn {
                get {
                    return this.columnEPI_imdb_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_imdb_RateCountColumn {
                get {
                    return this.columnEPI_imdb_RateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_WatchedCountColumn {
                get {
                    return this.columnEPI_WatchedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_NumberColumn {
                get {
                    return this.columnEPI_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_NumberOfSeasonColumn {
                get {
                    return this.columnEPI_NumberOfSeason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_NumberTextColumn {
                get {
                    return this.columnEPI_NumberText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPI_LanguagesColumn {
                get {
                    return this.columnEPI_Languages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesRow this[int index] {
                get {
                    return ((EPI_EpisodesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPI_EpisodesRowChangeEventHandler EPI_EpisodesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPI_EpisodesRowChangeEventHandler EPI_EpisodesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPI_EpisodesRowChangeEventHandler EPI_EpisodesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPI_EpisodesRowChangeEventHandler EPI_EpisodesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEPI_EpisodesRow(EPI_EpisodesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesRow AddEPI_EpisodesRow(
                        string EPI_ID, 
                        System.DateTime EPI_Created, 
                        System.DateTime EPI_Changed, 
                        System.DateTime EPI_Deleted, 
                        string EPI_theTVDB_ID, 
                        string EPI_imdb_ID, 
                        string EPI_SEA, 
                        string EPI_Name_German, 
                        string EPI_Name_English, 
                        string EPI_DescriptionShort_German, 
                        string EPI_DescriptionShort_English, 
                        string EPI_Description_German, 
                        string EPI_Description_English, 
                        System.DateTime EPI_FirstAired_German, 
                        System.DateTime EPI_FirstAired_English, 
                        double EPI_Rate, 
                        int EPI_RateCount, 
                        double EPI_imdb_Rate, 
                        int EPI_imdb_RateCount, 
                        int EPI_WatchedCount, 
                        int EPI_Number, 
                        int EPI_NumberOfSeason, 
                        string EPI_NumberText, 
                        string EPI_Languages) {
                EPI_EpisodesRow rowEPI_EpisodesRow = ((EPI_EpisodesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EPI_ID,
                        EPI_Created,
                        EPI_Changed,
                        EPI_Deleted,
                        EPI_theTVDB_ID,
                        EPI_imdb_ID,
                        EPI_SEA,
                        EPI_Name_German,
                        EPI_Name_English,
                        EPI_DescriptionShort_German,
                        EPI_DescriptionShort_English,
                        EPI_Description_German,
                        EPI_Description_English,
                        EPI_FirstAired_German,
                        EPI_FirstAired_English,
                        EPI_Rate,
                        EPI_RateCount,
                        EPI_imdb_Rate,
                        EPI_imdb_RateCount,
                        EPI_WatchedCount,
                        EPI_Number,
                        EPI_NumberOfSeason,
                        EPI_NumberText,
                        EPI_Languages};
                rowEPI_EpisodesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEPI_EpisodesRow);
                return rowEPI_EpisodesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesRow FindByEPI_ID(string EPI_ID) {
                return ((EPI_EpisodesRow)(this.Rows.Find(new object[] {
                            EPI_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EPI_EpisodesDataTable cln = ((EPI_EpisodesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EPI_EpisodesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEPI_ID = base.Columns["EPI_ID"];
                this.columnEPI_Created = base.Columns["EPI_Created"];
                this.columnEPI_Changed = base.Columns["EPI_Changed"];
                this.columnEPI_Deleted = base.Columns["EPI_Deleted"];
                this.columnEPI_theTVDB_ID = base.Columns["EPI_theTVDB_ID"];
                this.columnEPI_imdb_ID = base.Columns["EPI_imdb_ID"];
                this.columnEPI_SEA = base.Columns["EPI_SEA"];
                this.columnEPI_Name_German = base.Columns["EPI_Name_German"];
                this.columnEPI_Name_English = base.Columns["EPI_Name_English"];
                this.columnEPI_DescriptionShort_German = base.Columns["EPI_DescriptionShort_German"];
                this.columnEPI_DescriptionShort_English = base.Columns["EPI_DescriptionShort_English"];
                this.columnEPI_Description_German = base.Columns["EPI_Description_German"];
                this.columnEPI_Description_English = base.Columns["EPI_Description_English"];
                this.columnEPI_FirstAired_German = base.Columns["EPI_FirstAired_German"];
                this.columnEPI_FirstAired_English = base.Columns["EPI_FirstAired_English"];
                this.columnEPI_Rate = base.Columns["EPI_Rate"];
                this.columnEPI_RateCount = base.Columns["EPI_RateCount"];
                this.columnEPI_imdb_Rate = base.Columns["EPI_imdb_Rate"];
                this.columnEPI_imdb_RateCount = base.Columns["EPI_imdb_RateCount"];
                this.columnEPI_WatchedCount = base.Columns["EPI_WatchedCount"];
                this.columnEPI_Number = base.Columns["EPI_Number"];
                this.columnEPI_NumberOfSeason = base.Columns["EPI_NumberOfSeason"];
                this.columnEPI_NumberText = base.Columns["EPI_NumberText"];
                this.columnEPI_Languages = base.Columns["EPI_Languages"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEPI_ID = new global::System.Data.DataColumn("EPI_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_ID);
                this.columnEPI_Created = new global::System.Data.DataColumn("EPI_Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Created);
                this.columnEPI_Changed = new global::System.Data.DataColumn("EPI_Changed", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Changed);
                this.columnEPI_Deleted = new global::System.Data.DataColumn("EPI_Deleted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Deleted);
                this.columnEPI_theTVDB_ID = new global::System.Data.DataColumn("EPI_theTVDB_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_theTVDB_ID);
                this.columnEPI_imdb_ID = new global::System.Data.DataColumn("EPI_imdb_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_imdb_ID);
                this.columnEPI_SEA = new global::System.Data.DataColumn("EPI_SEA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_SEA);
                this.columnEPI_Name_German = new global::System.Data.DataColumn("EPI_Name_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Name_German);
                this.columnEPI_Name_English = new global::System.Data.DataColumn("EPI_Name_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Name_English);
                this.columnEPI_DescriptionShort_German = new global::System.Data.DataColumn("EPI_DescriptionShort_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_DescriptionShort_German);
                this.columnEPI_DescriptionShort_English = new global::System.Data.DataColumn("EPI_DescriptionShort_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_DescriptionShort_English);
                this.columnEPI_Description_German = new global::System.Data.DataColumn("EPI_Description_German", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Description_German);
                this.columnEPI_Description_English = new global::System.Data.DataColumn("EPI_Description_English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Description_English);
                this.columnEPI_FirstAired_German = new global::System.Data.DataColumn("EPI_FirstAired_German", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_FirstAired_German);
                this.columnEPI_FirstAired_English = new global::System.Data.DataColumn("EPI_FirstAired_English", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_FirstAired_English);
                this.columnEPI_Rate = new global::System.Data.DataColumn("EPI_Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Rate);
                this.columnEPI_RateCount = new global::System.Data.DataColumn("EPI_RateCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_RateCount);
                this.columnEPI_imdb_Rate = new global::System.Data.DataColumn("EPI_imdb_Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_imdb_Rate);
                this.columnEPI_imdb_RateCount = new global::System.Data.DataColumn("EPI_imdb_RateCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_imdb_RateCount);
                this.columnEPI_WatchedCount = new global::System.Data.DataColumn("EPI_WatchedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_WatchedCount);
                this.columnEPI_Number = new global::System.Data.DataColumn("EPI_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Number);
                this.columnEPI_NumberOfSeason = new global::System.Data.DataColumn("EPI_NumberOfSeason", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_NumberOfSeason);
                this.columnEPI_NumberText = new global::System.Data.DataColumn("EPI_NumberText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_NumberText);
                this.columnEPI_Languages = new global::System.Data.DataColumn("EPI_Languages", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPI_Languages);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEPI_ID}, true));
                this.columnEPI_ID.AllowDBNull = false;
                this.columnEPI_ID.Unique = true;
                this.columnEPI_ID.MaxLength = 255;
                this.columnEPI_Created.AllowDBNull = false;
                this.columnEPI_theTVDB_ID.MaxLength = 100;
                this.columnEPI_imdb_ID.MaxLength = 100;
                this.columnEPI_SEA.MaxLength = 100;
                this.columnEPI_Name_German.MaxLength = 250;
                this.columnEPI_Name_English.MaxLength = 250;
                this.columnEPI_DescriptionShort_German.MaxLength = 2147483647;
                this.columnEPI_DescriptionShort_English.MaxLength = 2147483647;
                this.columnEPI_Description_German.MaxLength = 2147483647;
                this.columnEPI_Description_English.MaxLength = 2147483647;
                this.columnEPI_NumberText.MaxLength = 100;
                this.columnEPI_Languages.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesRow NewEPI_EpisodesRow() {
                return ((EPI_EpisodesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EPI_EpisodesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EPI_EpisodesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EPI_EpisodesRowChanged != null)) {
                    this.EPI_EpisodesRowChanged(this, new EPI_EpisodesRowChangeEvent(((EPI_EpisodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EPI_EpisodesRowChanging != null)) {
                    this.EPI_EpisodesRowChanging(this, new EPI_EpisodesRowChangeEvent(((EPI_EpisodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EPI_EpisodesRowDeleted != null)) {
                    this.EPI_EpisodesRowDeleted(this, new EPI_EpisodesRowChangeEvent(((EPI_EpisodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EPI_EpisodesRowDeleting != null)) {
                    this.EPI_EpisodesRowDeleting(this, new EPI_EpisodesRowChangeEvent(((EPI_EpisodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEPI_EpisodesRow(EPI_EpisodesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSeries ds = new dsSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EPI_EpisodesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SER_SeriesRow : global::System.Data.DataRow {
            
            private SER_SeriesDataTable tableSER_Series;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SER_SeriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSER_Series = ((SER_SeriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_ID {
                get {
                    return ((string)(this[this.tableSER_Series.SER_IDColumn]));
                }
                set {
                    this[this.tableSER_Series.SER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_Created {
                get {
                    return ((global::System.DateTime)(this[this.tableSER_Series.SER_CreatedColumn]));
                }
                set {
                    this[this.tableSER_Series.SER_CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSER_Series.SER_ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Changed in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_Deleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSER_Series.SER_DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Deleted in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_theTVDB_ID {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_theTVDB_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_theTVDB_ID in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_theTVDB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Zap2It_ID {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_Zap2It_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Zap2It_ID in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_Zap2It_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_imdb_ID {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_imdb_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_imdb_ID in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_imdb_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Name_German {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_Name_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Name_German in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_Name_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Name_English {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_Name_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Name_English in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_Name_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_DescriptionShort_German {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_DescriptionShort_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_DescriptionShort_German in Tabelle SER_Series ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_DescriptionShort_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_DescriptionShort_English {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_DescriptionShort_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_DescriptionShort_English in Tabelle SER_Series ist DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_DescriptionShort_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Description_German {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_Description_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Description_German in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_Description_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Description_English {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_Description_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Description_English in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_Description_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_FirstAired_German {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSER_Series.SER_FirstAired_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_FirstAired_German in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_FirstAired_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_FirstAired_English {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSER_Series.SER_FirstAired_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_FirstAired_English in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_FirstAired_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SER_Rate {
                get {
                    try {
                        return ((double)(this[this.tableSER_Series.SER_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Rate in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SER_RateCount {
                get {
                    try {
                        return ((int)(this[this.tableSER_Series.SER_RateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_RateCount in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_RateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SER_imdb_Rate {
                get {
                    try {
                        return ((double)(this[this.tableSER_Series.SER_imdb_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_imdb_Rate in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_imdb_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SER_imdb_RateCount {
                get {
                    try {
                        return ((int)(this[this.tableSER_Series.SER_imdb_RateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_imdb_RateCount in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_imdb_RateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SER_RunTime {
                get {
                    try {
                        return ((int)(this[this.tableSER_Series.SER_RunTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_RunTime in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_RunTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_State {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_State in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Soundtrack {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_SoundtrackColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Soundtrack in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_SoundtrackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Trailer {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_TrailerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Trailer in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_TrailerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_ProductionDateFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSER_Series.SER_ProductionDateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_ProductionDateFrom in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_ProductionDateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SER_ProductionDateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSER_Series.SER_ProductionDateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_ProductionDateTo in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_ProductionDateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Country {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Country in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Languages {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_LanguagesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Languages in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_LanguagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Awards {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_AwardsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Awards in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_AwardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Website {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Website in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Facebook {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_FacebookColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Facebook in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_FacebookColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_Twitter {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_TwitterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_Twitter in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_TwitterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_ImageLink {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_ImageLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_ImageLink in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_ImageLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SER_SeasonCount {
                get {
                    try {
                        return ((int)(this[this.tableSER_Series.SER_SeasonCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_SeasonCount in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_SeasonCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SER_EpisodesCount {
                get {
                    try {
                        return ((int)(this[this.tableSER_Series.SER_EpisodesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_EpisodesCount in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_EpisodesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SER_FavouritesCount {
                get {
                    try {
                        return ((int)(this[this.tableSER_Series.SER_FavouritesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_FavouritesCount in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_FavouritesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SER_DIR {
                get {
                    try {
                        return ((string)(this[this.tableSER_Series.SER_DIRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SER_DIR in Tabelle SER_Series ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSER_Series.SER_DIRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_ChangedNull() {
                return this.IsNull(this.tableSER_Series.SER_ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_ChangedNull() {
                this[this.tableSER_Series.SER_ChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_DeletedNull() {
                return this.IsNull(this.tableSER_Series.SER_DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_DeletedNull() {
                this[this.tableSER_Series.SER_DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_theTVDB_IDNull() {
                return this.IsNull(this.tableSER_Series.SER_theTVDB_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_theTVDB_IDNull() {
                this[this.tableSER_Series.SER_theTVDB_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_Zap2It_IDNull() {
                return this.IsNull(this.tableSER_Series.SER_Zap2It_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_Zap2It_IDNull() {
                this[this.tableSER_Series.SER_Zap2It_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_imdb_IDNull() {
                return this.IsNull(this.tableSER_Series.SER_imdb_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_imdb_IDNull() {
                this[this.tableSER_Series.SER_imdb_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_Name_GermanNull() {
                return this.IsNull(this.tableSER_Series.SER_Name_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_Name_GermanNull() {
                this[this.tableSER_Series.SER_Name_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_Name_EnglishNull() {
                return this.IsNull(this.tableSER_Series.SER_Name_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_Name_EnglishNull() {
                this[this.tableSER_Series.SER_Name_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_DescriptionShort_GermanNull() {
                return this.IsNull(this.tableSER_Series.SER_DescriptionShort_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_DescriptionShort_GermanNull() {
                this[this.tableSER_Series.SER_DescriptionShort_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_DescriptionShort_EnglishNull() {
                return this.IsNull(this.tableSER_Series.SER_DescriptionShort_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_DescriptionShort_EnglishNull() {
                this[this.tableSER_Series.SER_DescriptionShort_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_Description_GermanNull() {
                return this.IsNull(this.tableSER_Series.SER_Description_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_Description_GermanNull() {
                this[this.tableSER_Series.SER_Description_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_Description_EnglishNull() {
                return this.IsNull(this.tableSER_Series.SER_Description_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_Description_EnglishNull() {
                this[this.tableSER_Series.SER_Description_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_FirstAired_GermanNull() {
                return this.IsNull(this.tableSER_Series.SER_FirstAired_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_FirstAired_GermanNull() {
                this[this.tableSER_Series.SER_FirstAired_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_FirstAired_EnglishNull() {
                return this.IsNull(this.tableSER_Series.SER_FirstAired_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_FirstAired_EnglishNull() {
                this[this.tableSER_Series.SER_FirstAired_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_RateNull() {
                return this.IsNull(this.tableSER_Series.SER_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_RateNull() {
                this[this.tableSER_Series.SER_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_RateCountNull() {
                return this.IsNull(this.tableSER_Series.SER_RateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_RateCountNull() {
                this[this.tableSER_Series.SER_RateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_imdb_RateNull() {
                return this.IsNull(this.tableSER_Series.SER_imdb_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_imdb_RateNull() {
                this[this.tableSER_Series.SER_imdb_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_imdb_RateCountNull() {
                return this.IsNull(this.tableSER_Series.SER_imdb_RateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_imdb_RateCountNull() {
                this[this.tableSER_Series.SER_imdb_RateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_RunTimeNull() {
                return this.IsNull(this.tableSER_Series.SER_RunTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_RunTimeNull() {
                this[this.tableSER_Series.SER_RunTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_StateNull() {
                return this.IsNull(this.tableSER_Series.SER_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_StateNull() {
                this[this.tableSER_Series.SER_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_SoundtrackNull() {
                return this.IsNull(this.tableSER_Series.SER_SoundtrackColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_SoundtrackNull() {
                this[this.tableSER_Series.SER_SoundtrackColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_TrailerNull() {
                return this.IsNull(this.tableSER_Series.SER_TrailerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_TrailerNull() {
                this[this.tableSER_Series.SER_TrailerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_ProductionDateFromNull() {
                return this.IsNull(this.tableSER_Series.SER_ProductionDateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_ProductionDateFromNull() {
                this[this.tableSER_Series.SER_ProductionDateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_ProductionDateToNull() {
                return this.IsNull(this.tableSER_Series.SER_ProductionDateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_ProductionDateToNull() {
                this[this.tableSER_Series.SER_ProductionDateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_CountryNull() {
                return this.IsNull(this.tableSER_Series.SER_CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_CountryNull() {
                this[this.tableSER_Series.SER_CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_LanguagesNull() {
                return this.IsNull(this.tableSER_Series.SER_LanguagesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_LanguagesNull() {
                this[this.tableSER_Series.SER_LanguagesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_AwardsNull() {
                return this.IsNull(this.tableSER_Series.SER_AwardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_AwardsNull() {
                this[this.tableSER_Series.SER_AwardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_WebsiteNull() {
                return this.IsNull(this.tableSER_Series.SER_WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_WebsiteNull() {
                this[this.tableSER_Series.SER_WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_FacebookNull() {
                return this.IsNull(this.tableSER_Series.SER_FacebookColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_FacebookNull() {
                this[this.tableSER_Series.SER_FacebookColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_TwitterNull() {
                return this.IsNull(this.tableSER_Series.SER_TwitterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_TwitterNull() {
                this[this.tableSER_Series.SER_TwitterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_ImageLinkNull() {
                return this.IsNull(this.tableSER_Series.SER_ImageLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_ImageLinkNull() {
                this[this.tableSER_Series.SER_ImageLinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_SeasonCountNull() {
                return this.IsNull(this.tableSER_Series.SER_SeasonCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_SeasonCountNull() {
                this[this.tableSER_Series.SER_SeasonCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_EpisodesCountNull() {
                return this.IsNull(this.tableSER_Series.SER_EpisodesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_EpisodesCountNull() {
                this[this.tableSER_Series.SER_EpisodesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_FavouritesCountNull() {
                return this.IsNull(this.tableSER_Series.SER_FavouritesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_FavouritesCountNull() {
                this[this.tableSER_Series.SER_FavouritesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSER_DIRNull() {
                return this.IsNull(this.tableSER_Series.SER_DIRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSER_DIRNull() {
                this[this.tableSER_Series.SER_DIRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SEA_SeasonsRow : global::System.Data.DataRow {
            
            private SEA_SeasonsDataTable tableSEA_Seasons;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SEA_SeasonsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSEA_Seasons = ((SEA_SeasonsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_ID {
                get {
                    return ((string)(this[this.tableSEA_Seasons.SEA_IDColumn]));
                }
                set {
                    this[this.tableSEA_Seasons.SEA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SEA_Created {
                get {
                    return ((global::System.DateTime)(this[this.tableSEA_Seasons.SEA_CreatedColumn]));
                }
                set {
                    this[this.tableSEA_Seasons.SEA_CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SEA_Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSEA_Seasons.SEA_ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Changed in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SEA_Deleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSEA_Seasons.SEA_DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Deleted in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_theTVDB_ID {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_theTVDB_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_theTVDB_ID in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_theTVDB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_imdb_ID {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_imdb_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_imdb_ID in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_imdb_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_SER {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_SERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_SER in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_SERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_Name_German {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_Name_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Name_German in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_Name_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_Name_English {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_Name_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Name_English in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_Name_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SEA_Number {
                get {
                    try {
                        return ((int)(this[this.tableSEA_Seasons.SEA_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Number in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SEA_OrderNumber {
                get {
                    try {
                        return ((int)(this[this.tableSEA_Seasons.SEA_OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_OrderNumber in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SEA_EpisodesCount {
                get {
                    try {
                        return ((int)(this[this.tableSEA_Seasons.SEA_EpisodesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_EpisodesCount in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_EpisodesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_Description_German {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_Description_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Description_German in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_Description_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_Description_English {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_Description_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_Description_English in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_Description_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SEA_NumberText {
                get {
                    try {
                        return ((string)(this[this.tableSEA_Seasons.SEA_NumberTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SEA_NumberText in Tabelle SEA_Seasons ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableSEA_Seasons.SEA_NumberTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_ChangedNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_ChangedNull() {
                this[this.tableSEA_Seasons.SEA_ChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_DeletedNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_DeletedNull() {
                this[this.tableSEA_Seasons.SEA_DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_theTVDB_IDNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_theTVDB_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_theTVDB_IDNull() {
                this[this.tableSEA_Seasons.SEA_theTVDB_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_imdb_IDNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_imdb_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_imdb_IDNull() {
                this[this.tableSEA_Seasons.SEA_imdb_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_SERNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_SERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_SERNull() {
                this[this.tableSEA_Seasons.SEA_SERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_Name_GermanNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_Name_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_Name_GermanNull() {
                this[this.tableSEA_Seasons.SEA_Name_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_Name_EnglishNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_Name_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_Name_EnglishNull() {
                this[this.tableSEA_Seasons.SEA_Name_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_NumberNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_NumberNull() {
                this[this.tableSEA_Seasons.SEA_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_OrderNumberNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_OrderNumberNull() {
                this[this.tableSEA_Seasons.SEA_OrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_EpisodesCountNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_EpisodesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_EpisodesCountNull() {
                this[this.tableSEA_Seasons.SEA_EpisodesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_Description_GermanNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_Description_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_Description_GermanNull() {
                this[this.tableSEA_Seasons.SEA_Description_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_Description_EnglishNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_Description_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_Description_EnglishNull() {
                this[this.tableSEA_Seasons.SEA_Description_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEA_NumberTextNull() {
                return this.IsNull(this.tableSEA_Seasons.SEA_NumberTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEA_NumberTextNull() {
                this[this.tableSEA_Seasons.SEA_NumberTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EPI_EpisodesRow : global::System.Data.DataRow {
            
            private EPI_EpisodesDataTable tableEPI_Episodes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPI_EpisodesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEPI_Episodes = ((EPI_EpisodesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_ID {
                get {
                    return ((string)(this[this.tableEPI_Episodes.EPI_IDColumn]));
                }
                set {
                    this[this.tableEPI_Episodes.EPI_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EPI_Created {
                get {
                    return ((global::System.DateTime)(this[this.tableEPI_Episodes.EPI_CreatedColumn]));
                }
                set {
                    this[this.tableEPI_Episodes.EPI_CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EPI_Changed {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPI_Episodes.EPI_ChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Changed in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EPI_Deleted {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPI_Episodes.EPI_DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Deleted in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_theTVDB_ID {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_theTVDB_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_theTVDB_ID in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_theTVDB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_imdb_ID {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_imdb_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_imdb_ID in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_imdb_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_SEA {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_SEAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_SEA in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_SEAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_Name_German {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_Name_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Name_German in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_Name_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_Name_English {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_Name_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Name_English in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_Name_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_DescriptionShort_German {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_DescriptionShort_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_DescriptionShort_German in Tabelle EPI_Episodes ist DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_DescriptionShort_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_DescriptionShort_English {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_DescriptionShort_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_DescriptionShort_English in Tabelle EPI_Episodes ist DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_DescriptionShort_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_Description_German {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_Description_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Description_German in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_Description_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_Description_English {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_Description_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Description_English in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_Description_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EPI_FirstAired_German {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPI_Episodes.EPI_FirstAired_GermanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_FirstAired_German in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_FirstAired_GermanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EPI_FirstAired_English {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPI_Episodes.EPI_FirstAired_EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_FirstAired_English in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_FirstAired_EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EPI_Rate {
                get {
                    try {
                        return ((double)(this[this.tableEPI_Episodes.EPI_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Rate in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPI_RateCount {
                get {
                    try {
                        return ((int)(this[this.tableEPI_Episodes.EPI_RateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_RateCount in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_RateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EPI_imdb_Rate {
                get {
                    try {
                        return ((double)(this[this.tableEPI_Episodes.EPI_imdb_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_imdb_Rate in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_imdb_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPI_imdb_RateCount {
                get {
                    try {
                        return ((int)(this[this.tableEPI_Episodes.EPI_imdb_RateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_imdb_RateCount in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_imdb_RateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPI_WatchedCount {
                get {
                    try {
                        return ((int)(this[this.tableEPI_Episodes.EPI_WatchedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_WatchedCount in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_WatchedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPI_Number {
                get {
                    try {
                        return ((int)(this[this.tableEPI_Episodes.EPI_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Number in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPI_NumberOfSeason {
                get {
                    try {
                        return ((int)(this[this.tableEPI_Episodes.EPI_NumberOfSeasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_NumberOfSeason in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_NumberOfSeasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_NumberText {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_NumberTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_NumberText in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_NumberTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPI_Languages {
                get {
                    try {
                        return ((string)(this[this.tableEPI_Episodes.EPI_LanguagesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EPI_Languages in Tabelle EPI_Episodes ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPI_Episodes.EPI_LanguagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_ChangedNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_ChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_ChangedNull() {
                this[this.tableEPI_Episodes.EPI_ChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_DeletedNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_DeletedNull() {
                this[this.tableEPI_Episodes.EPI_DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_theTVDB_IDNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_theTVDB_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_theTVDB_IDNull() {
                this[this.tableEPI_Episodes.EPI_theTVDB_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_imdb_IDNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_imdb_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_imdb_IDNull() {
                this[this.tableEPI_Episodes.EPI_imdb_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_SEANull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_SEAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_SEANull() {
                this[this.tableEPI_Episodes.EPI_SEAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_Name_GermanNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_Name_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_Name_GermanNull() {
                this[this.tableEPI_Episodes.EPI_Name_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_Name_EnglishNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_Name_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_Name_EnglishNull() {
                this[this.tableEPI_Episodes.EPI_Name_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_DescriptionShort_GermanNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_DescriptionShort_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_DescriptionShort_GermanNull() {
                this[this.tableEPI_Episodes.EPI_DescriptionShort_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_DescriptionShort_EnglishNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_DescriptionShort_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_DescriptionShort_EnglishNull() {
                this[this.tableEPI_Episodes.EPI_DescriptionShort_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_Description_GermanNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_Description_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_Description_GermanNull() {
                this[this.tableEPI_Episodes.EPI_Description_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_Description_EnglishNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_Description_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_Description_EnglishNull() {
                this[this.tableEPI_Episodes.EPI_Description_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_FirstAired_GermanNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_FirstAired_GermanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_FirstAired_GermanNull() {
                this[this.tableEPI_Episodes.EPI_FirstAired_GermanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_FirstAired_EnglishNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_FirstAired_EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_FirstAired_EnglishNull() {
                this[this.tableEPI_Episodes.EPI_FirstAired_EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_RateNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_RateNull() {
                this[this.tableEPI_Episodes.EPI_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_RateCountNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_RateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_RateCountNull() {
                this[this.tableEPI_Episodes.EPI_RateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_imdb_RateNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_imdb_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_imdb_RateNull() {
                this[this.tableEPI_Episodes.EPI_imdb_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_imdb_RateCountNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_imdb_RateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_imdb_RateCountNull() {
                this[this.tableEPI_Episodes.EPI_imdb_RateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_WatchedCountNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_WatchedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_WatchedCountNull() {
                this[this.tableEPI_Episodes.EPI_WatchedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_NumberNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_NumberNull() {
                this[this.tableEPI_Episodes.EPI_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_NumberOfSeasonNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_NumberOfSeasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_NumberOfSeasonNull() {
                this[this.tableEPI_Episodes.EPI_NumberOfSeasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_NumberTextNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_NumberTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_NumberTextNull() {
                this[this.tableEPI_Episodes.EPI_NumberTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPI_LanguagesNull() {
                return this.IsNull(this.tableEPI_Episodes.EPI_LanguagesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPI_LanguagesNull() {
                this[this.tableEPI_Episodes.EPI_LanguagesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SER_SeriesRowChangeEvent : global::System.EventArgs {
            
            private SER_SeriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesRowChangeEvent(SER_SeriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SER_SeriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SEA_SeasonsRowChangeEvent : global::System.EventArgs {
            
            private SEA_SeasonsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsRowChangeEvent(SEA_SeasonsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SEA_SeasonsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EPI_EpisodesRowChangeEvent : global::System.EventArgs {
            
            private EPI_EpisodesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesRowChangeEvent(EPI_EpisodesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPI_EpisodesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Interface_TheTvDB.dsSeriesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SER_SeriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SER_SeriesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SER_Series";
            tableMapping.ColumnMappings.Add("SER_ID", "SER_ID");
            tableMapping.ColumnMappings.Add("SER_Created", "SER_Created");
            tableMapping.ColumnMappings.Add("SER_Changed", "SER_Changed");
            tableMapping.ColumnMappings.Add("SER_Deleted", "SER_Deleted");
            tableMapping.ColumnMappings.Add("SER_theTVDB_ID", "SER_theTVDB_ID");
            tableMapping.ColumnMappings.Add("SER_Zap2It_ID", "SER_Zap2It_ID");
            tableMapping.ColumnMappings.Add("SER_imdb_ID", "SER_imdb_ID");
            tableMapping.ColumnMappings.Add("SER_Name_German", "SER_Name_German");
            tableMapping.ColumnMappings.Add("SER_Name_English", "SER_Name_English");
            tableMapping.ColumnMappings.Add("SER_DescriptionShort_German", "SER_DescriptionShort_German");
            tableMapping.ColumnMappings.Add("SER_DescriptionShort_English", "SER_DescriptionShort_English");
            tableMapping.ColumnMappings.Add("SER_Description_German", "SER_Description_German");
            tableMapping.ColumnMappings.Add("SER_Description_English", "SER_Description_English");
            tableMapping.ColumnMappings.Add("SER_FirstAired_German", "SER_FirstAired_German");
            tableMapping.ColumnMappings.Add("SER_FirstAired_English", "SER_FirstAired_English");
            tableMapping.ColumnMappings.Add("SER_Rate", "SER_Rate");
            tableMapping.ColumnMappings.Add("SER_RateCount", "SER_RateCount");
            tableMapping.ColumnMappings.Add("SER_imdb_Rate", "SER_imdb_Rate");
            tableMapping.ColumnMappings.Add("SER_imdb_RateCount", "SER_imdb_RateCount");
            tableMapping.ColumnMappings.Add("SER_RunTime", "SER_RunTime");
            tableMapping.ColumnMappings.Add("SER_State", "SER_State");
            tableMapping.ColumnMappings.Add("SER_Soundtrack", "SER_Soundtrack");
            tableMapping.ColumnMappings.Add("SER_Trailer", "SER_Trailer");
            tableMapping.ColumnMappings.Add("SER_ProductionDateFrom", "SER_ProductionDateFrom");
            tableMapping.ColumnMappings.Add("SER_ProductionDateTo", "SER_ProductionDateTo");
            tableMapping.ColumnMappings.Add("SER_Country", "SER_Country");
            tableMapping.ColumnMappings.Add("SER_Languages", "SER_Languages");
            tableMapping.ColumnMappings.Add("SER_Awards", "SER_Awards");
            tableMapping.ColumnMappings.Add("SER_Website", "SER_Website");
            tableMapping.ColumnMappings.Add("SER_Facebook", "SER_Facebook");
            tableMapping.ColumnMappings.Add("SER_Twitter", "SER_Twitter");
            tableMapping.ColumnMappings.Add("SER_ImageLink", "SER_ImageLink");
            tableMapping.ColumnMappings.Add("SER_SeasonCount", "SER_SeasonCount");
            tableMapping.ColumnMappings.Add("SER_EpisodesCount", "SER_EpisodesCount");
            tableMapping.ColumnMappings.Add("SER_FavouritesCount", "SER_FavouritesCount");
            tableMapping.ColumnMappings.Add("SER_DIR", "SER_DIR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SER_Series] WHERE (([SER_ID] = @Original_SER_ID) AND ([SER_Cre" +
                "ated] = @Original_SER_Created) AND ((@IsNull_SER_Changed = 1 AND [SER_Changed] I" +
                "S NULL) OR ([SER_Changed] = @Original_SER_Changed)) AND ((@IsNull_SER_Deleted = " +
                "1 AND [SER_Deleted] IS NULL) OR ([SER_Deleted] = @Original_SER_Deleted)) AND ((@" +
                "IsNull_SER_theTVDB_ID = 1 AND [SER_theTVDB_ID] IS NULL) OR ([SER_theTVDB_ID] = @" +
                "Original_SER_theTVDB_ID)) AND ((@IsNull_SER_Zap2It_ID = 1 AND [SER_Zap2It_ID] IS" +
                " NULL) OR ([SER_Zap2It_ID] = @Original_SER_Zap2It_ID)) AND ((@IsNull_SER_imdb_ID" +
                " = 1 AND [SER_imdb_ID] IS NULL) OR ([SER_imdb_ID] = @Original_SER_imdb_ID)) AND " +
                "((@IsNull_SER_Name_German = 1 AND [SER_Name_German] IS NULL) OR ([SER_Name_Germa" +
                "n] = @Original_SER_Name_German)) AND ((@IsNull_SER_Name_English = 1 AND [SER_Nam" +
                "e_English] IS NULL) OR ([SER_Name_English] = @Original_SER_Name_English)) AND ((" +
                "@IsNull_SER_FirstAired_German = 1 AND [SER_FirstAired_German] IS NULL) OR ([SER_" +
                "FirstAired_German] = @Original_SER_FirstAired_German)) AND ((@IsNull_SER_FirstAi" +
                "red_English = 1 AND [SER_FirstAired_English] IS NULL) OR ([SER_FirstAired_Englis" +
                "h] = @Original_SER_FirstAired_English)) AND ((@IsNull_SER_Rate = 1 AND [SER_Rate" +
                "] IS NULL) OR ([SER_Rate] = @Original_SER_Rate)) AND ((@IsNull_SER_RateCount = 1" +
                " AND [SER_RateCount] IS NULL) OR ([SER_RateCount] = @Original_SER_RateCount)) AN" +
                "D ((@IsNull_SER_imdb_Rate = 1 AND [SER_imdb_Rate] IS NULL) OR ([SER_imdb_Rate] =" +
                " @Original_SER_imdb_Rate)) AND ((@IsNull_SER_imdb_RateCount = 1 AND [SER_imdb_Ra" +
                "teCount] IS NULL) OR ([SER_imdb_RateCount] = @Original_SER_imdb_RateCount)) AND " +
                "((@IsNull_SER_RunTime = 1 AND [SER_RunTime] IS NULL) OR ([SER_RunTime] = @Origin" +
                "al_SER_RunTime)) AND ((@IsNull_SER_State = 1 AND [SER_State] IS NULL) OR ([SER_S" +
                "tate] = @Original_SER_State)) AND ((@IsNull_SER_ProductionDateFrom = 1 AND [SER_" +
                "ProductionDateFrom] IS NULL) OR ([SER_ProductionDateFrom] = @Original_SER_Produc" +
                "tionDateFrom)) AND ((@IsNull_SER_ProductionDateTo = 1 AND [SER_ProductionDateTo]" +
                " IS NULL) OR ([SER_ProductionDateTo] = @Original_SER_ProductionDateTo)) AND ((@I" +
                "sNull_SER_Country = 1 AND [SER_Country] IS NULL) OR ([SER_Country] = @Original_S" +
                "ER_Country)) AND ((@IsNull_SER_Languages = 1 AND [SER_Languages] IS NULL) OR ([S" +
                "ER_Languages] = @Original_SER_Languages)) AND ((@IsNull_SER_SeasonCount = 1 AND " +
                "[SER_SeasonCount] IS NULL) OR ([SER_SeasonCount] = @Original_SER_SeasonCount)) A" +
                "ND ((@IsNull_SER_EpisodesCount = 1 AND [SER_EpisodesCount] IS NULL) OR ([SER_Epi" +
                "sodesCount] = @Original_SER_EpisodesCount)) AND ((@IsNull_SER_FavouritesCount = " +
                "1 AND [SER_FavouritesCount] IS NULL) OR ([SER_FavouritesCount] = @Original_SER_F" +
                "avouritesCount)) AND ((@IsNull_SER_DIR = 1 AND [SER_DIR] IS NULL) OR ([SER_DIR] " +
                "= @Original_SER_DIR)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Changed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Changed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Changed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_theTVDB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Zap2It_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Zap2It_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Zap2It_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Zap2It_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_imdb_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Name_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Name_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_FirstAired_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_FirstAired_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_imdb_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_RunTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RunTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_RunTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RunTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_ProductionDateFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_ProductionDateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_ProductionDateTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_ProductionDateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Country", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Country", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Country", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Languages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Languages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Languages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_SeasonCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_SeasonCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_SeasonCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_SeasonCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_EpisodesCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_EpisodesCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_FavouritesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FavouritesCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_FavouritesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FavouritesCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_DIR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DIR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_DIR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DIR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SER_Series] ([SER_ID], [SER_Created], [SER_Changed], [SER_Dele" +
                "ted], [SER_theTVDB_ID], [SER_Zap2It_ID], [SER_imdb_ID], [SER_Name_German], [SER_" +
                "Name_English], [SER_DescriptionShort_German], [SER_DescriptionShort_English], [S" +
                "ER_Description_German], [SER_Description_English], [SER_FirstAired_German], [SER" +
                "_FirstAired_English], [SER_Rate], [SER_RateCount], [SER_imdb_Rate], [SER_imdb_Ra" +
                "teCount], [SER_RunTime], [SER_State], [SER_Soundtrack], [SER_Trailer], [SER_Prod" +
                "uctionDateFrom], [SER_ProductionDateTo], [SER_Country], [SER_Languages], [SER_Aw" +
                "ards], [SER_Website], [SER_Facebook], [SER_Twitter], [SER_ImageLink], [SER_Seaso" +
                "nCount], [SER_EpisodesCount], [SER_FavouritesCount], [SER_DIR]) VALUES (@SER_ID," +
                " @SER_Created, @SER_Changed, @SER_Deleted, @SER_theTVDB_ID, @SER_Zap2It_ID, @SER" +
                "_imdb_ID, @SER_Name_German, @SER_Name_English, @SER_DescriptionShort_German, @SE" +
                "R_DescriptionShort_English, @SER_Description_German, @SER_Description_English, @" +
                "SER_FirstAired_German, @SER_FirstAired_English, @SER_Rate, @SER_RateCount, @SER_" +
                "imdb_Rate, @SER_imdb_RateCount, @SER_RunTime, @SER_State, @SER_Soundtrack, @SER_" +
                "Trailer, @SER_ProductionDateFrom, @SER_ProductionDateTo, @SER_Country, @SER_Lang" +
                "uages, @SER_Awards, @SER_Website, @SER_Facebook, @SER_Twitter, @SER_ImageLink, @" +
                "SER_SeasonCount, @SER_EpisodesCount, @SER_FavouritesCount, @SER_DIR);\r\nSELECT SE" +
                "R_ID, SER_Created, SER_Changed, SER_Deleted, SER_theTVDB_ID, SER_Zap2It_ID, SER_" +
                "imdb_ID, SER_Name_German, SER_Name_English, SER_DescriptionShort_German, SER_Des" +
                "criptionShort_English, SER_Description_German, SER_Description_English, SER_Firs" +
                "tAired_German, SER_FirstAired_English, SER_Rate, SER_RateCount, SER_imdb_Rate, S" +
                "ER_imdb_RateCount, SER_RunTime, SER_State, SER_Soundtrack, SER_Trailer, SER_Prod" +
                "uctionDateFrom, SER_ProductionDateTo, SER_Country, SER_Languages, SER_Awards, SE" +
                "R_Website, SER_Facebook, SER_Twitter, SER_ImageLink, SER_SeasonCount, SER_Episod" +
                "esCount, SER_FavouritesCount, SER_DIR FROM SER_Series WHERE (SER_ID = @SER_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Changed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Zap2It_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Zap2It_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_DescriptionShort_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DescriptionShort_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_DescriptionShort_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DescriptionShort_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Description_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Description_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Description_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Description_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_RunTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RunTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Soundtrack", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Soundtrack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Trailer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Trailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ProductionDateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ProductionDateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Languages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Awards", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Awards", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Facebook", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Facebook", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Twitter", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Twitter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ImageLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ImageLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_SeasonCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_SeasonCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_EpisodesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_FavouritesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FavouritesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_DIR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DIR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SER_Series] SET [SER_ID] = @SER_ID, [SER_Created] = @SER_Created, [" +
                "SER_Changed] = @SER_Changed, [SER_Deleted] = @SER_Deleted, [SER_theTVDB_ID] = @S" +
                "ER_theTVDB_ID, [SER_Zap2It_ID] = @SER_Zap2It_ID, [SER_imdb_ID] = @SER_imdb_ID, [" +
                "SER_Name_German] = @SER_Name_German, [SER_Name_English] = @SER_Name_English, [SE" +
                "R_DescriptionShort_German] = @SER_DescriptionShort_German, [SER_DescriptionShort" +
                "_English] = @SER_DescriptionShort_English, [SER_Description_German] = @SER_Descr" +
                "iption_German, [SER_Description_English] = @SER_Description_English, [SER_FirstA" +
                "ired_German] = @SER_FirstAired_German, [SER_FirstAired_English] = @SER_FirstAire" +
                "d_English, [SER_Rate] = @SER_Rate, [SER_RateCount] = @SER_RateCount, [SER_imdb_R" +
                "ate] = @SER_imdb_Rate, [SER_imdb_RateCount] = @SER_imdb_RateCount, [SER_RunTime]" +
                " = @SER_RunTime, [SER_State] = @SER_State, [SER_Soundtrack] = @SER_Soundtrack, [" +
                "SER_Trailer] = @SER_Trailer, [SER_ProductionDateFrom] = @SER_ProductionDateFrom," +
                " [SER_ProductionDateTo] = @SER_ProductionDateTo, [SER_Country] = @SER_Country, [" +
                "SER_Languages] = @SER_Languages, [SER_Awards] = @SER_Awards, [SER_Website] = @SE" +
                "R_Website, [SER_Facebook] = @SER_Facebook, [SER_Twitter] = @SER_Twitter, [SER_Im" +
                "ageLink] = @SER_ImageLink, [SER_SeasonCount] = @SER_SeasonCount, [SER_EpisodesCo" +
                "unt] = @SER_EpisodesCount, [SER_FavouritesCount] = @SER_FavouritesCount, [SER_DI" +
                "R] = @SER_DIR WHERE (([SER_ID] = @Original_SER_ID) AND ([SER_Created] = @Origina" +
                "l_SER_Created) AND ((@IsNull_SER_Changed = 1 AND [SER_Changed] IS NULL) OR ([SER" +
                "_Changed] = @Original_SER_Changed)) AND ((@IsNull_SER_Deleted = 1 AND [SER_Delet" +
                "ed] IS NULL) OR ([SER_Deleted] = @Original_SER_Deleted)) AND ((@IsNull_SER_theTV" +
                "DB_ID = 1 AND [SER_theTVDB_ID] IS NULL) OR ([SER_theTVDB_ID] = @Original_SER_the" +
                "TVDB_ID)) AND ((@IsNull_SER_Zap2It_ID = 1 AND [SER_Zap2It_ID] IS NULL) OR ([SER_" +
                "Zap2It_ID] = @Original_SER_Zap2It_ID)) AND ((@IsNull_SER_imdb_ID = 1 AND [SER_im" +
                "db_ID] IS NULL) OR ([SER_imdb_ID] = @Original_SER_imdb_ID)) AND ((@IsNull_SER_Na" +
                "me_German = 1 AND [SER_Name_German] IS NULL) OR ([SER_Name_German] = @Original_S" +
                "ER_Name_German)) AND ((@IsNull_SER_Name_English = 1 AND [SER_Name_English] IS NU" +
                "LL) OR ([SER_Name_English] = @Original_SER_Name_English)) AND ((@IsNull_SER_Firs" +
                "tAired_German = 1 AND [SER_FirstAired_German] IS NULL) OR ([SER_FirstAired_Germa" +
                "n] = @Original_SER_FirstAired_German)) AND ((@IsNull_SER_FirstAired_English = 1 " +
                "AND [SER_FirstAired_English] IS NULL) OR ([SER_FirstAired_English] = @Original_S" +
                "ER_FirstAired_English)) AND ((@IsNull_SER_Rate = 1 AND [SER_Rate] IS NULL) OR ([" +
                "SER_Rate] = @Original_SER_Rate)) AND ((@IsNull_SER_RateCount = 1 AND [SER_RateCo" +
                "unt] IS NULL) OR ([SER_RateCount] = @Original_SER_RateCount)) AND ((@IsNull_SER_" +
                "imdb_Rate = 1 AND [SER_imdb_Rate] IS NULL) OR ([SER_imdb_Rate] = @Original_SER_i" +
                "mdb_Rate)) AND ((@IsNull_SER_imdb_RateCount = 1 AND [SER_imdb_RateCount] IS NULL" +
                ") OR ([SER_imdb_RateCount] = @Original_SER_imdb_RateCount)) AND ((@IsNull_SER_Ru" +
                "nTime = 1 AND [SER_RunTime] IS NULL) OR ([SER_RunTime] = @Original_SER_RunTime))" +
                " AND ((@IsNull_SER_State = 1 AND [SER_State] IS NULL) OR ([SER_State] = @Origina" +
                "l_SER_State)) AND ((@IsNull_SER_ProductionDateFrom = 1 AND [SER_ProductionDateFr" +
                "om] IS NULL) OR ([SER_ProductionDateFrom] = @Original_SER_ProductionDateFrom)) A" +
                "ND ((@IsNull_SER_ProductionDateTo = 1 AND [SER_ProductionDateTo] IS NULL) OR ([S" +
                "ER_ProductionDateTo] = @Original_SER_ProductionDateTo)) AND ((@IsNull_SER_Countr" +
                "y = 1 AND [SER_Country] IS NULL) OR ([SER_Country] = @Original_SER_Country)) AND" +
                " ((@IsNull_SER_Languages = 1 AND [SER_Languages] IS NULL) OR ([SER_Languages] = " +
                "@Original_SER_Languages)) AND ((@IsNull_SER_SeasonCount = 1 AND [SER_SeasonCount" +
                "] IS NULL) OR ([SER_SeasonCount] = @Original_SER_SeasonCount)) AND ((@IsNull_SER" +
                "_EpisodesCount = 1 AND [SER_EpisodesCount] IS NULL) OR ([SER_EpisodesCount] = @O" +
                "riginal_SER_EpisodesCount)) AND ((@IsNull_SER_FavouritesCount = 1 AND [SER_Favou" +
                "ritesCount] IS NULL) OR ([SER_FavouritesCount] = @Original_SER_FavouritesCount))" +
                " AND ((@IsNull_SER_DIR = 1 AND [SER_DIR] IS NULL) OR ([SER_DIR] = @Original_SER_" +
                "DIR)));\r\nSELECT SER_ID, SER_Created, SER_Changed, SER_Deleted, SER_theTVDB_ID, S" +
                "ER_Zap2It_ID, SER_imdb_ID, SER_Name_German, SER_Name_English, SER_DescriptionSho" +
                "rt_German, SER_DescriptionShort_English, SER_Description_German, SER_Description" +
                "_English, SER_FirstAired_German, SER_FirstAired_English, SER_Rate, SER_RateCount" +
                ", SER_imdb_Rate, SER_imdb_RateCount, SER_RunTime, SER_State, SER_Soundtrack, SER" +
                "_Trailer, SER_ProductionDateFrom, SER_ProductionDateTo, SER_Country, SER_Languag" +
                "es, SER_Awards, SER_Website, SER_Facebook, SER_Twitter, SER_ImageLink, SER_Seaso" +
                "nCount, SER_EpisodesCount, SER_FavouritesCount, SER_DIR FROM SER_Series WHERE (S" +
                "ER_ID = @SER_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Changed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Zap2It_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Zap2It_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_DescriptionShort_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DescriptionShort_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_DescriptionShort_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DescriptionShort_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Description_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Description_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Description_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Description_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_RunTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RunTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Soundtrack", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Soundtrack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Trailer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Trailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ProductionDateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ProductionDateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Languages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Awards", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Awards", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Facebook", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Facebook", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_Twitter", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Twitter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ImageLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ImageLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_SeasonCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_SeasonCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_EpisodesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_FavouritesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FavouritesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_DIR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DIR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Changed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Changed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Changed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_theTVDB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Zap2It_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Zap2It_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Zap2It_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Zap2It_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_imdb_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Name_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Name_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Name_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_FirstAired_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_FirstAired_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FirstAired_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_imdb_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_imdb_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_RunTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RunTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_RunTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_RunTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_ProductionDateFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_ProductionDateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_ProductionDateTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_ProductionDateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ProductionDateTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Country", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Country", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Country", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_Languages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Languages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_Languages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_SeasonCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_SeasonCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_SeasonCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_SeasonCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_EpisodesCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_EpisodesCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_FavouritesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FavouritesCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_FavouritesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_FavouritesCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SER_DIR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DIR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER_DIR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER_DIR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Interface_TheTvDB.Properties.Settings.Default.dbSeriesConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SER_ID, SER_Created, SER_Changed, SER_Deleted, SER_theTVDB_ID, SER_Zap2It_ID, SER_imdb_ID, SER_Name_German, SER_Name_English, SER_DescriptionShort_German, SER_DescriptionShort_English, SER_Description_German, SER_Description_English, SER_FirstAired_German, SER_FirstAired_English, SER_Rate, SER_RateCount, SER_imdb_Rate, SER_imdb_RateCount, SER_RunTime, SER_State, SER_Soundtrack, SER_Trailer, SER_ProductionDateFrom, SER_ProductionDateTo, SER_Country, SER_Languages, SER_Awards, SER_Website, SER_Facebook, SER_Twitter, SER_ImageLink, SER_SeasonCount, SER_EpisodesCount, SER_FavouritesCount, SER_DIR FROM dbo.SER_Series";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT SER_ID, SER_Created, SER_Changed, SER_Deleted, SER_theTVDB_ID, SER_Zap2It_ID, SER_imdb_ID, SER_Name_German, SER_Name_English, SER_DescriptionShort_German, SER_DescriptionShort_English, SER_Description_German, SER_Description_English, SER_FirstAired_German, SER_FirstAired_English, SER_Rate, SER_RateCount, SER_imdb_Rate, SER_imdb_RateCount, SER_RunTime, SER_State, SER_Soundtrack, SER_Trailer, SER_ProductionDateFrom, SER_ProductionDateTo, SER_Country, SER_Languages, SER_Awards, SER_Website, SER_Facebook, SER_Twitter, SER_ImageLink, SER_SeasonCount, SER_EpisodesCount, SER_FavouritesCount, SER_DIR FROM dbo.SER_Series
where SER_ID = @SER_ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER_ID", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "SER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT top 1 SER_ID FROM SER_Series \r\nwhere SER_TheTVDB_ID = @theTVDB_ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@theTVDB_ID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "SER_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSeries.SER_SeriesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSeries.SER_SeriesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSeries.SER_SeriesDataTable dataTable = new dsSeries.SER_SeriesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(dsSeries.SER_SeriesDataTable dataTable, string SER_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SER_ID == null)) {
                throw new global::System.ArgumentNullException("SER_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(SER_ID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsSeries.SER_SeriesDataTable GetDataByID(string SER_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SER_ID == null)) {
                throw new global::System.ArgumentNullException("SER_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(SER_ID));
            }
            dsSeries.SER_SeriesDataTable dataTable = new dsSeries.SER_SeriesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSeries.SER_SeriesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSeries dataSet) {
            return this.Adapter.Update(dataSet, "SER_Series");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_SER_ID, 
                    System.DateTime Original_SER_Created, 
                    global::System.Nullable<global::System.DateTime> Original_SER_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_SER_Deleted, 
                    string Original_SER_theTVDB_ID, 
                    string Original_SER_Zap2It_ID, 
                    string Original_SER_imdb_ID, 
                    string Original_SER_Name_German, 
                    string Original_SER_Name_English, 
                    global::System.Nullable<global::System.DateTime> Original_SER_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> Original_SER_FirstAired_English, 
                    global::System.Nullable<double> Original_SER_Rate, 
                    global::System.Nullable<int> Original_SER_RateCount, 
                    global::System.Nullable<double> Original_SER_imdb_Rate, 
                    global::System.Nullable<int> Original_SER_imdb_RateCount, 
                    global::System.Nullable<int> Original_SER_RunTime, 
                    string Original_SER_State, 
                    global::System.Nullable<global::System.DateTime> Original_SER_ProductionDateFrom, 
                    global::System.Nullable<global::System.DateTime> Original_SER_ProductionDateTo, 
                    string Original_SER_Country, 
                    string Original_SER_Languages, 
                    global::System.Nullable<int> Original_SER_SeasonCount, 
                    global::System.Nullable<int> Original_SER_EpisodesCount, 
                    global::System.Nullable<int> Original_SER_FavouritesCount, 
                    string Original_SER_DIR) {
            if ((Original_SER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SER_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_SER_Created));
            if ((Original_SER_Changed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_SER_Changed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_Deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_SER_Deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_theTVDB_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SER_theTVDB_ID));
            }
            if ((Original_SER_Zap2It_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SER_Zap2It_ID));
            }
            if ((Original_SER_imdb_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_SER_imdb_ID));
            }
            if ((Original_SER_Name_German == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_SER_Name_German));
            }
            if ((Original_SER_Name_English == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_SER_Name_English));
            }
            if ((Original_SER_FirstAired_German.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_SER_FirstAired_German.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_FirstAired_English.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_SER_FirstAired_English.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_Rate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_SER_Rate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_RateCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_SER_RateCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_imdb_Rate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_SER_imdb_Rate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_imdb_RateCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_SER_imdb_RateCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_RunTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_SER_RunTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_State == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_SER_State));
            }
            if ((Original_SER_ProductionDateFrom.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_SER_ProductionDateFrom.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_ProductionDateTo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((System.DateTime)(Original_SER_ProductionDateTo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_Country == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_SER_Country));
            }
            if ((Original_SER_Languages == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_SER_Languages));
            }
            if ((Original_SER_SeasonCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_SER_SeasonCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_EpisodesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_SER_EpisodesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_FavouritesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((int)(Original_SER_FavouritesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_DIR == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_SER_DIR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SER_ID, 
                    System.DateTime SER_Created, 
                    global::System.Nullable<global::System.DateTime> SER_Changed, 
                    global::System.Nullable<global::System.DateTime> SER_Deleted, 
                    string SER_theTVDB_ID, 
                    string SER_Zap2It_ID, 
                    string SER_imdb_ID, 
                    string SER_Name_German, 
                    string SER_Name_English, 
                    string SER_DescriptionShort_German, 
                    string SER_DescriptionShort_English, 
                    string SER_Description_German, 
                    string SER_Description_English, 
                    global::System.Nullable<global::System.DateTime> SER_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> SER_FirstAired_English, 
                    global::System.Nullable<double> SER_Rate, 
                    global::System.Nullable<int> SER_RateCount, 
                    global::System.Nullable<double> SER_imdb_Rate, 
                    global::System.Nullable<int> SER_imdb_RateCount, 
                    global::System.Nullable<int> SER_RunTime, 
                    string SER_State, 
                    string SER_Soundtrack, 
                    string SER_Trailer, 
                    global::System.Nullable<global::System.DateTime> SER_ProductionDateFrom, 
                    global::System.Nullable<global::System.DateTime> SER_ProductionDateTo, 
                    string SER_Country, 
                    string SER_Languages, 
                    string SER_Awards, 
                    string SER_Website, 
                    string SER_Facebook, 
                    string SER_Twitter, 
                    string SER_ImageLink, 
                    global::System.Nullable<int> SER_SeasonCount, 
                    global::System.Nullable<int> SER_EpisodesCount, 
                    global::System.Nullable<int> SER_FavouritesCount, 
                    string SER_DIR) {
            if ((SER_ID == null)) {
                throw new global::System.ArgumentNullException("SER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SER_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SER_Created));
            if ((SER_Changed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(SER_Changed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SER_Deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SER_Deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SER_theTVDB_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SER_theTVDB_ID));
            }
            if ((SER_Zap2It_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SER_Zap2It_ID));
            }
            if ((SER_imdb_ID == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SER_imdb_ID));
            }
            if ((SER_Name_German == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SER_Name_German));
            }
            if ((SER_Name_English == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SER_Name_English));
            }
            if ((SER_DescriptionShort_German == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SER_DescriptionShort_German));
            }
            if ((SER_DescriptionShort_English == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SER_DescriptionShort_English));
            }
            if ((SER_Description_German == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SER_Description_German));
            }
            if ((SER_Description_English == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SER_Description_English));
            }
            if ((SER_FirstAired_German.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(SER_FirstAired_German.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SER_FirstAired_English.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(SER_FirstAired_English.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SER_Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(SER_Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((SER_RateCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(SER_RateCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SER_imdb_Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(SER_imdb_Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SER_imdb_RateCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(SER_imdb_RateCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SER_RunTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SER_RunTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SER_State == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(SER_State));
            }
            if ((SER_Soundtrack == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(SER_Soundtrack));
            }
            if ((SER_Trailer == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(SER_Trailer));
            }
            if ((SER_ProductionDateFrom.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(SER_ProductionDateFrom.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SER_ProductionDateTo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(SER_ProductionDateTo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SER_Country == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SER_Country));
            }
            if ((SER_Languages == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(SER_Languages));
            }
            if ((SER_Awards == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(SER_Awards));
            }
            if ((SER_Website == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(SER_Website));
            }
            if ((SER_Facebook == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SER_Facebook));
            }
            if ((SER_Twitter == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(SER_Twitter));
            }
            if ((SER_ImageLink == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SER_ImageLink));
            }
            if ((SER_SeasonCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(SER_SeasonCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SER_EpisodesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(SER_EpisodesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SER_FavouritesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(SER_FavouritesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SER_DIR == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SER_DIR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SER_ID, 
                    System.DateTime SER_Created, 
                    global::System.Nullable<global::System.DateTime> SER_Changed, 
                    global::System.Nullable<global::System.DateTime> SER_Deleted, 
                    string SER_theTVDB_ID, 
                    string SER_Zap2It_ID, 
                    string SER_imdb_ID, 
                    string SER_Name_German, 
                    string SER_Name_English, 
                    string SER_DescriptionShort_German, 
                    string SER_DescriptionShort_English, 
                    string SER_Description_German, 
                    string SER_Description_English, 
                    global::System.Nullable<global::System.DateTime> SER_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> SER_FirstAired_English, 
                    global::System.Nullable<double> SER_Rate, 
                    global::System.Nullable<int> SER_RateCount, 
                    global::System.Nullable<double> SER_imdb_Rate, 
                    global::System.Nullable<int> SER_imdb_RateCount, 
                    global::System.Nullable<int> SER_RunTime, 
                    string SER_State, 
                    string SER_Soundtrack, 
                    string SER_Trailer, 
                    global::System.Nullable<global::System.DateTime> SER_ProductionDateFrom, 
                    global::System.Nullable<global::System.DateTime> SER_ProductionDateTo, 
                    string SER_Country, 
                    string SER_Languages, 
                    string SER_Awards, 
                    string SER_Website, 
                    string SER_Facebook, 
                    string SER_Twitter, 
                    string SER_ImageLink, 
                    global::System.Nullable<int> SER_SeasonCount, 
                    global::System.Nullable<int> SER_EpisodesCount, 
                    global::System.Nullable<int> SER_FavouritesCount, 
                    string SER_DIR, 
                    string Original_SER_ID, 
                    System.DateTime Original_SER_Created, 
                    global::System.Nullable<global::System.DateTime> Original_SER_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_SER_Deleted, 
                    string Original_SER_theTVDB_ID, 
                    string Original_SER_Zap2It_ID, 
                    string Original_SER_imdb_ID, 
                    string Original_SER_Name_German, 
                    string Original_SER_Name_English, 
                    global::System.Nullable<global::System.DateTime> Original_SER_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> Original_SER_FirstAired_English, 
                    global::System.Nullable<double> Original_SER_Rate, 
                    global::System.Nullable<int> Original_SER_RateCount, 
                    global::System.Nullable<double> Original_SER_imdb_Rate, 
                    global::System.Nullable<int> Original_SER_imdb_RateCount, 
                    global::System.Nullable<int> Original_SER_RunTime, 
                    string Original_SER_State, 
                    global::System.Nullable<global::System.DateTime> Original_SER_ProductionDateFrom, 
                    global::System.Nullable<global::System.DateTime> Original_SER_ProductionDateTo, 
                    string Original_SER_Country, 
                    string Original_SER_Languages, 
                    global::System.Nullable<int> Original_SER_SeasonCount, 
                    global::System.Nullable<int> Original_SER_EpisodesCount, 
                    global::System.Nullable<int> Original_SER_FavouritesCount, 
                    string Original_SER_DIR) {
            if ((SER_ID == null)) {
                throw new global::System.ArgumentNullException("SER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SER_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SER_Created));
            if ((SER_Changed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(SER_Changed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SER_Deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SER_Deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SER_theTVDB_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SER_theTVDB_ID));
            }
            if ((SER_Zap2It_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SER_Zap2It_ID));
            }
            if ((SER_imdb_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SER_imdb_ID));
            }
            if ((SER_Name_German == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SER_Name_German));
            }
            if ((SER_Name_English == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SER_Name_English));
            }
            if ((SER_DescriptionShort_German == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SER_DescriptionShort_German));
            }
            if ((SER_DescriptionShort_English == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SER_DescriptionShort_English));
            }
            if ((SER_Description_German == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(SER_Description_German));
            }
            if ((SER_Description_English == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SER_Description_English));
            }
            if ((SER_FirstAired_German.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(SER_FirstAired_German.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SER_FirstAired_English.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(SER_FirstAired_English.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SER_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(SER_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((SER_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(SER_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SER_imdb_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(SER_imdb_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SER_imdb_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(SER_imdb_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SER_RunTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SER_RunTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SER_State == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(SER_State));
            }
            if ((SER_Soundtrack == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(SER_Soundtrack));
            }
            if ((SER_Trailer == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(SER_Trailer));
            }
            if ((SER_ProductionDateFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(SER_ProductionDateFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SER_ProductionDateTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(SER_ProductionDateTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SER_Country == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SER_Country));
            }
            if ((SER_Languages == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(SER_Languages));
            }
            if ((SER_Awards == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(SER_Awards));
            }
            if ((SER_Website == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(SER_Website));
            }
            if ((SER_Facebook == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SER_Facebook));
            }
            if ((SER_Twitter == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(SER_Twitter));
            }
            if ((SER_ImageLink == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SER_ImageLink));
            }
            if ((SER_SeasonCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(SER_SeasonCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SER_EpisodesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(SER_EpisodesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SER_FavouritesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(SER_FavouritesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SER_DIR == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SER_DIR));
            }
            if ((Original_SER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_SER_ID));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_SER_Created));
            if ((Original_SER_Changed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_SER_Changed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_Deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_SER_Deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_theTVDB_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_SER_theTVDB_ID));
            }
            if ((Original_SER_Zap2It_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_SER_Zap2It_ID));
            }
            if ((Original_SER_imdb_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_SER_imdb_ID));
            }
            if ((Original_SER_Name_German == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_SER_Name_German));
            }
            if ((Original_SER_Name_English == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_SER_Name_English));
            }
            if ((Original_SER_FirstAired_German.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_SER_FirstAired_German.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_FirstAired_English.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(Original_SER_FirstAired_English.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Original_SER_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_SER_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_imdb_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(Original_SER_imdb_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_imdb_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_SER_imdb_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_RunTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_SER_RunTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_State == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_SER_State));
            }
            if ((Original_SER_ProductionDateFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_SER_ProductionDateFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_ProductionDateTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(Original_SER_ProductionDateTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_Country == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_SER_Country));
            }
            if ((Original_SER_Languages == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_SER_Languages));
            }
            if ((Original_SER_SeasonCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_SER_SeasonCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_EpisodesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_SER_EpisodesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_FavouritesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_SER_FavouritesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_SER_DIR == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_SER_DIR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime SER_Created, 
                    global::System.Nullable<global::System.DateTime> SER_Changed, 
                    global::System.Nullable<global::System.DateTime> SER_Deleted, 
                    string SER_theTVDB_ID, 
                    string SER_Zap2It_ID, 
                    string SER_imdb_ID, 
                    string SER_Name_German, 
                    string SER_Name_English, 
                    string SER_DescriptionShort_German, 
                    string SER_DescriptionShort_English, 
                    string SER_Description_German, 
                    string SER_Description_English, 
                    global::System.Nullable<global::System.DateTime> SER_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> SER_FirstAired_English, 
                    global::System.Nullable<double> SER_Rate, 
                    global::System.Nullable<int> SER_RateCount, 
                    global::System.Nullable<double> SER_imdb_Rate, 
                    global::System.Nullable<int> SER_imdb_RateCount, 
                    global::System.Nullable<int> SER_RunTime, 
                    string SER_State, 
                    string SER_Soundtrack, 
                    string SER_Trailer, 
                    global::System.Nullable<global::System.DateTime> SER_ProductionDateFrom, 
                    global::System.Nullable<global::System.DateTime> SER_ProductionDateTo, 
                    string SER_Country, 
                    string SER_Languages, 
                    string SER_Awards, 
                    string SER_Website, 
                    string SER_Facebook, 
                    string SER_Twitter, 
                    string SER_ImageLink, 
                    global::System.Nullable<int> SER_SeasonCount, 
                    global::System.Nullable<int> SER_EpisodesCount, 
                    global::System.Nullable<int> SER_FavouritesCount, 
                    string SER_DIR, 
                    string Original_SER_ID, 
                    System.DateTime Original_SER_Created, 
                    global::System.Nullable<global::System.DateTime> Original_SER_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_SER_Deleted, 
                    string Original_SER_theTVDB_ID, 
                    string Original_SER_Zap2It_ID, 
                    string Original_SER_imdb_ID, 
                    string Original_SER_Name_German, 
                    string Original_SER_Name_English, 
                    global::System.Nullable<global::System.DateTime> Original_SER_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> Original_SER_FirstAired_English, 
                    global::System.Nullable<double> Original_SER_Rate, 
                    global::System.Nullable<int> Original_SER_RateCount, 
                    global::System.Nullable<double> Original_SER_imdb_Rate, 
                    global::System.Nullable<int> Original_SER_imdb_RateCount, 
                    global::System.Nullable<int> Original_SER_RunTime, 
                    string Original_SER_State, 
                    global::System.Nullable<global::System.DateTime> Original_SER_ProductionDateFrom, 
                    global::System.Nullable<global::System.DateTime> Original_SER_ProductionDateTo, 
                    string Original_SER_Country, 
                    string Original_SER_Languages, 
                    global::System.Nullable<int> Original_SER_SeasonCount, 
                    global::System.Nullable<int> Original_SER_EpisodesCount, 
                    global::System.Nullable<int> Original_SER_FavouritesCount, 
                    string Original_SER_DIR) {
            return this.Update(Original_SER_ID, SER_Created, SER_Changed, SER_Deleted, SER_theTVDB_ID, SER_Zap2It_ID, SER_imdb_ID, SER_Name_German, SER_Name_English, SER_DescriptionShort_German, SER_DescriptionShort_English, SER_Description_German, SER_Description_English, SER_FirstAired_German, SER_FirstAired_English, SER_Rate, SER_RateCount, SER_imdb_Rate, SER_imdb_RateCount, SER_RunTime, SER_State, SER_Soundtrack, SER_Trailer, SER_ProductionDateFrom, SER_ProductionDateTo, SER_Country, SER_Languages, SER_Awards, SER_Website, SER_Facebook, SER_Twitter, SER_ImageLink, SER_SeasonCount, SER_EpisodesCount, SER_FavouritesCount, SER_DIR, Original_SER_ID, Original_SER_Created, Original_SER_Changed, Original_SER_Deleted, Original_SER_theTVDB_ID, Original_SER_Zap2It_ID, Original_SER_imdb_ID, Original_SER_Name_German, Original_SER_Name_English, Original_SER_FirstAired_German, Original_SER_FirstAired_English, Original_SER_Rate, Original_SER_RateCount, Original_SER_imdb_Rate, Original_SER_imdb_RateCount, Original_SER_RunTime, Original_SER_State, Original_SER_ProductionDateFrom, Original_SER_ProductionDateTo, Original_SER_Country, Original_SER_Languages, Original_SER_SeasonCount, Original_SER_EpisodesCount, Original_SER_FavouritesCount, Original_SER_DIR);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string getSER_IDwithTHETVDB_ID(string theTVDB_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((theTVDB_ID == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(theTVDB_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SEA_SeasonsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SEA_SeasonsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SEA_Seasons";
            tableMapping.ColumnMappings.Add("SEA_ID", "SEA_ID");
            tableMapping.ColumnMappings.Add("SEA_Created", "SEA_Created");
            tableMapping.ColumnMappings.Add("SEA_Changed", "SEA_Changed");
            tableMapping.ColumnMappings.Add("SEA_Deleted", "SEA_Deleted");
            tableMapping.ColumnMappings.Add("SEA_theTVDB_ID", "SEA_theTVDB_ID");
            tableMapping.ColumnMappings.Add("SEA_imdb_ID", "SEA_imdb_ID");
            tableMapping.ColumnMappings.Add("SEA_SER", "SEA_SER");
            tableMapping.ColumnMappings.Add("SEA_Name_German", "SEA_Name_German");
            tableMapping.ColumnMappings.Add("SEA_Name_English", "SEA_Name_English");
            tableMapping.ColumnMappings.Add("SEA_Number", "SEA_Number");
            tableMapping.ColumnMappings.Add("SEA_OrderNumber", "SEA_OrderNumber");
            tableMapping.ColumnMappings.Add("SEA_EpisodesCount", "SEA_EpisodesCount");
            tableMapping.ColumnMappings.Add("SEA_Description_German", "SEA_Description_German");
            tableMapping.ColumnMappings.Add("SEA_Description_English", "SEA_Description_English");
            tableMapping.ColumnMappings.Add("SEA_NumberText", "SEA_NumberText");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SEA_Seasons] WHERE (([SEA_ID] = @Original_SEA_ID) AND ([SEA_Created] = @Original_SEA_Created) AND ((@IsNull_SEA_Changed = 1 AND [SEA_Changed] IS NULL) OR ([SEA_Changed] = @Original_SEA_Changed)) AND ((@IsNull_SEA_Deleted = 1 AND [SEA_Deleted] IS NULL) OR ([SEA_Deleted] = @Original_SEA_Deleted)) AND ((@IsNull_SEA_theTVDB_ID = 1 AND [SEA_theTVDB_ID] IS NULL) OR ([SEA_theTVDB_ID] = @Original_SEA_theTVDB_ID)) AND ((@IsNull_SEA_imdb_ID = 1 AND [SEA_imdb_ID] IS NULL) OR ([SEA_imdb_ID] = @Original_SEA_imdb_ID)) AND ((@IsNull_SEA_SER = 1 AND [SEA_SER] IS NULL) OR ([SEA_SER] = @Original_SEA_SER)) AND ((@IsNull_SEA_Name_German = 1 AND [SEA_Name_German] IS NULL) OR ([SEA_Name_German] = @Original_SEA_Name_German)) AND ((@IsNull_SEA_Name_English = 1 AND [SEA_Name_English] IS NULL) OR ([SEA_Name_English] = @Original_SEA_Name_English)) AND ((@IsNull_SEA_Number = 1 AND [SEA_Number] IS NULL) OR ([SEA_Number] = @Original_SEA_Number)) AND ((@IsNull_SEA_OrderNumber = 1 AND [SEA_OrderNumber] IS NULL) OR ([SEA_OrderNumber] = @Original_SEA_OrderNumber)) AND ((@IsNull_SEA_EpisodesCount = 1 AND [SEA_EpisodesCount] IS NULL) OR ([SEA_EpisodesCount] = @Original_SEA_EpisodesCount)) AND ((@IsNull_SEA_NumberText = 1 AND [SEA_NumberText] IS NULL) OR ([SEA_NumberText] = @Original_SEA_NumberText)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Changed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Changed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Changed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_theTVDB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_imdb_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_imdb_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_imdb_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_SER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_SER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Name_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Name_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_OrderNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_OrderNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_OrderNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_OrderNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_EpisodesCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_EpisodesCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_NumberText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_NumberText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_NumberText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SEA_Seasons] ([SEA_ID], [SEA_Created], [SEA_Changed], [SEA_Deleted], [SEA_theTVDB_ID], [SEA_imdb_ID], [SEA_SER], [SEA_Name_German], [SEA_Name_English], [SEA_Number], [SEA_OrderNumber], [SEA_EpisodesCount], [SEA_Description_German], [SEA_Description_English], [SEA_NumberText]) VALUES (@SEA_ID, @SEA_Created, @SEA_Changed, @SEA_Deleted, @SEA_theTVDB_ID, @SEA_imdb_ID, @SEA_SER, @SEA_Name_German, @SEA_Name_English, @SEA_Number, @SEA_OrderNumber, @SEA_EpisodesCount, @SEA_Description_German, @SEA_Description_English, @SEA_NumberText);
SELECT SEA_ID, SEA_Created, SEA_Changed, SEA_Deleted, SEA_theTVDB_ID, SEA_imdb_ID, SEA_SER, SEA_Name_German, SEA_Name_English, SEA_Number, SEA_OrderNumber, SEA_EpisodesCount, SEA_Description_German, SEA_Description_English, SEA_NumberText FROM SEA_Seasons WHERE (SEA_ID = @SEA_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Changed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_imdb_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_SER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_OrderNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_OrderNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_EpisodesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Description_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Description_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Description_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Description_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_NumberText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SEA_Seasons] SET [SEA_ID] = @SEA_ID, [SEA_Created] = @SEA_Created, " +
                "[SEA_Changed] = @SEA_Changed, [SEA_Deleted] = @SEA_Deleted, [SEA_theTVDB_ID] = @" +
                "SEA_theTVDB_ID, [SEA_imdb_ID] = @SEA_imdb_ID, [SEA_SER] = @SEA_SER, [SEA_Name_Ge" +
                "rman] = @SEA_Name_German, [SEA_Name_English] = @SEA_Name_English, [SEA_Number] =" +
                " @SEA_Number, [SEA_OrderNumber] = @SEA_OrderNumber, [SEA_EpisodesCount] = @SEA_E" +
                "pisodesCount, [SEA_Description_German] = @SEA_Description_German, [SEA_Descripti" +
                "on_English] = @SEA_Description_English, [SEA_NumberText] = @SEA_NumberText WHERE" +
                " (([SEA_ID] = @Original_SEA_ID) AND ([SEA_Created] = @Original_SEA_Created) AND " +
                "((@IsNull_SEA_Changed = 1 AND [SEA_Changed] IS NULL) OR ([SEA_Changed] = @Origin" +
                "al_SEA_Changed)) AND ((@IsNull_SEA_Deleted = 1 AND [SEA_Deleted] IS NULL) OR ([S" +
                "EA_Deleted] = @Original_SEA_Deleted)) AND ((@IsNull_SEA_theTVDB_ID = 1 AND [SEA_" +
                "theTVDB_ID] IS NULL) OR ([SEA_theTVDB_ID] = @Original_SEA_theTVDB_ID)) AND ((@Is" +
                "Null_SEA_imdb_ID = 1 AND [SEA_imdb_ID] IS NULL) OR ([SEA_imdb_ID] = @Original_SE" +
                "A_imdb_ID)) AND ((@IsNull_SEA_SER = 1 AND [SEA_SER] IS NULL) OR ([SEA_SER] = @Or" +
                "iginal_SEA_SER)) AND ((@IsNull_SEA_Name_German = 1 AND [SEA_Name_German] IS NULL" +
                ") OR ([SEA_Name_German] = @Original_SEA_Name_German)) AND ((@IsNull_SEA_Name_Eng" +
                "lish = 1 AND [SEA_Name_English] IS NULL) OR ([SEA_Name_English] = @Original_SEA_" +
                "Name_English)) AND ((@IsNull_SEA_Number = 1 AND [SEA_Number] IS NULL) OR ([SEA_N" +
                "umber] = @Original_SEA_Number)) AND ((@IsNull_SEA_OrderNumber = 1 AND [SEA_Order" +
                "Number] IS NULL) OR ([SEA_OrderNumber] = @Original_SEA_OrderNumber)) AND ((@IsNu" +
                "ll_SEA_EpisodesCount = 1 AND [SEA_EpisodesCount] IS NULL) OR ([SEA_EpisodesCount" +
                "] = @Original_SEA_EpisodesCount)) AND ((@IsNull_SEA_NumberText = 1 AND [SEA_Numb" +
                "erText] IS NULL) OR ([SEA_NumberText] = @Original_SEA_NumberText)));\r\nSELECT SEA" +
                "_ID, SEA_Created, SEA_Changed, SEA_Deleted, SEA_theTVDB_ID, SEA_imdb_ID, SEA_SER" +
                ", SEA_Name_German, SEA_Name_English, SEA_Number, SEA_OrderNumber, SEA_EpisodesCo" +
                "unt, SEA_Description_German, SEA_Description_English, SEA_NumberText FROM SEA_Se" +
                "asons WHERE (SEA_ID = @SEA_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Changed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_imdb_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_SER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_OrderNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_OrderNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_EpisodesCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Description_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Description_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_Description_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Description_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_NumberText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Changed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Changed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Changed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_theTVDB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_imdb_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_imdb_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_imdb_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_SER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_SER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Name_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Name_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Name_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_OrderNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_OrderNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_OrderNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_OrderNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_EpisodesCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_EpisodesCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_EpisodesCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEA_NumberText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_NumberText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEA_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_NumberText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Interface_TheTvDB.Properties.Settings.Default.dbSeriesConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SEA_ID, SEA_Created, SEA_Changed, SEA_Deleted, SEA_theTVDB_ID, SEA_imdb_ID, SEA_SER, SEA_Name_German, SEA_Name_English, SEA_Number, SEA_OrderNumber, SEA_EpisodesCount, SEA_Description_German, SEA_Description_English, SEA_NumberText FROM dbo.SEA_Seasons";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT SEA_ID, SEA_Created, SEA_Changed, SEA_Deleted, SEA_theTVDB_ID, SEA_imdb_ID, SEA_SER, SEA_Name_German, SEA_Name_English, SEA_Number, SEA_OrderNumber, SEA_EpisodesCount, SEA_Description_German, SEA_Description_English, SEA_NumberText FROM dbo.SEA_Seasons
where SEA_id = @id";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT SEA_ID, SEA_Created, SEA_Changed, SEA_Deleted, SEA_theTVDB_ID, SEA_imdb_ID, SEA_SER, SEA_Name_German, SEA_Name_English, SEA_Number, SEA_OrderNumber, SEA_EpisodesCount, SEA_Description_German, SEA_Description_English, SEA_NumberText FROM dbo.SEA_Seasons
where SEA_SER = @ser";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ser", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_SER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT SEA_ID FROM SEA_Seasons\r\nwhere SEA_theTVDB_ID = @theTVDB_ID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@theTVDB_ID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "SEA_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSeries.SEA_SeasonsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSeries.SEA_SeasonsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSeries.SEA_SeasonsDataTable dataTable = new dsSeries.SEA_SeasonsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(dsSeries.SEA_SeasonsDataTable dataTable, string id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(id));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySER(dsSeries.SEA_SeasonsDataTable dataTable, string ser) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ser == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ser));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsSeries.SEA_SeasonsDataTable GetDataBySER(string ser) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ser == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ser));
            }
            dsSeries.SEA_SeasonsDataTable dataTable = new dsSeries.SEA_SeasonsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSeries.SEA_SeasonsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSeries dataSet) {
            return this.Adapter.Update(dataSet, "SEA_Seasons");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SEA_ID, System.DateTime Original_SEA_Created, global::System.Nullable<global::System.DateTime> Original_SEA_Changed, global::System.Nullable<global::System.DateTime> Original_SEA_Deleted, string Original_SEA_theTVDB_ID, string Original_SEA_imdb_ID, string Original_SEA_SER, string Original_SEA_Name_German, string Original_SEA_Name_English, global::System.Nullable<int> Original_SEA_Number, global::System.Nullable<int> Original_SEA_OrderNumber, global::System.Nullable<int> Original_SEA_EpisodesCount, string Original_SEA_NumberText) {
            if ((Original_SEA_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SEA_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SEA_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_SEA_Created));
            if ((Original_SEA_Changed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_SEA_Changed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_Deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_SEA_Deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_theTVDB_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SEA_theTVDB_ID));
            }
            if ((Original_SEA_imdb_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SEA_imdb_ID));
            }
            if ((Original_SEA_SER == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_SEA_SER));
            }
            if ((Original_SEA_Name_German == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_SEA_Name_German));
            }
            if ((Original_SEA_Name_English == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_SEA_Name_English));
            }
            if ((Original_SEA_Number.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_SEA_Number.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_OrderNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_SEA_OrderNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_EpisodesCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_SEA_EpisodesCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_NumberText == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SEA_NumberText));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SEA_ID, System.DateTime SEA_Created, global::System.Nullable<global::System.DateTime> SEA_Changed, global::System.Nullable<global::System.DateTime> SEA_Deleted, string SEA_theTVDB_ID, string SEA_imdb_ID, string SEA_SER, string SEA_Name_German, string SEA_Name_English, global::System.Nullable<int> SEA_Number, global::System.Nullable<int> SEA_OrderNumber, global::System.Nullable<int> SEA_EpisodesCount, string SEA_Description_German, string SEA_Description_English, string SEA_NumberText) {
            if ((SEA_ID == null)) {
                throw new global::System.ArgumentNullException("SEA_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SEA_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SEA_Created));
            if ((SEA_Changed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(SEA_Changed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SEA_Deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SEA_Deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SEA_theTVDB_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SEA_theTVDB_ID));
            }
            if ((SEA_imdb_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SEA_imdb_ID));
            }
            if ((SEA_SER == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SEA_SER));
            }
            if ((SEA_Name_German == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SEA_Name_German));
            }
            if ((SEA_Name_English == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SEA_Name_English));
            }
            if ((SEA_Number.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(SEA_Number.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SEA_OrderNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(SEA_OrderNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SEA_EpisodesCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(SEA_EpisodesCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SEA_Description_German == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SEA_Description_German));
            }
            if ((SEA_Description_English == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(SEA_Description_English));
            }
            if ((SEA_NumberText == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SEA_NumberText));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SEA_ID, 
                    System.DateTime SEA_Created, 
                    global::System.Nullable<global::System.DateTime> SEA_Changed, 
                    global::System.Nullable<global::System.DateTime> SEA_Deleted, 
                    string SEA_theTVDB_ID, 
                    string SEA_imdb_ID, 
                    string SEA_SER, 
                    string SEA_Name_German, 
                    string SEA_Name_English, 
                    global::System.Nullable<int> SEA_Number, 
                    global::System.Nullable<int> SEA_OrderNumber, 
                    global::System.Nullable<int> SEA_EpisodesCount, 
                    string SEA_Description_German, 
                    string SEA_Description_English, 
                    string SEA_NumberText, 
                    string Original_SEA_ID, 
                    System.DateTime Original_SEA_Created, 
                    global::System.Nullable<global::System.DateTime> Original_SEA_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_SEA_Deleted, 
                    string Original_SEA_theTVDB_ID, 
                    string Original_SEA_imdb_ID, 
                    string Original_SEA_SER, 
                    string Original_SEA_Name_German, 
                    string Original_SEA_Name_English, 
                    global::System.Nullable<int> Original_SEA_Number, 
                    global::System.Nullable<int> Original_SEA_OrderNumber, 
                    global::System.Nullable<int> Original_SEA_EpisodesCount, 
                    string Original_SEA_NumberText) {
            if ((SEA_ID == null)) {
                throw new global::System.ArgumentNullException("SEA_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SEA_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SEA_Created));
            if ((SEA_Changed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(SEA_Changed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SEA_Deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SEA_Deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SEA_theTVDB_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SEA_theTVDB_ID));
            }
            if ((SEA_imdb_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SEA_imdb_ID));
            }
            if ((SEA_SER == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SEA_SER));
            }
            if ((SEA_Name_German == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SEA_Name_German));
            }
            if ((SEA_Name_English == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SEA_Name_English));
            }
            if ((SEA_Number.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(SEA_Number.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SEA_OrderNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SEA_OrderNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SEA_EpisodesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(SEA_EpisodesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SEA_Description_German == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SEA_Description_German));
            }
            if ((SEA_Description_English == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(SEA_Description_English));
            }
            if ((SEA_NumberText == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SEA_NumberText));
            }
            if ((Original_SEA_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SEA_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_SEA_ID));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_SEA_Created));
            if ((Original_SEA_Changed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_SEA_Changed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_Deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_SEA_Deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_theTVDB_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_SEA_theTVDB_ID));
            }
            if ((Original_SEA_imdb_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_SEA_imdb_ID));
            }
            if ((Original_SEA_SER == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_SEA_SER));
            }
            if ((Original_SEA_Name_German == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_SEA_Name_German));
            }
            if ((Original_SEA_Name_English == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_SEA_Name_English));
            }
            if ((Original_SEA_Number.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_SEA_Number.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_OrderNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_SEA_OrderNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_EpisodesCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_SEA_EpisodesCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_SEA_NumberText == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_SEA_NumberText));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime SEA_Created, 
                    global::System.Nullable<global::System.DateTime> SEA_Changed, 
                    global::System.Nullable<global::System.DateTime> SEA_Deleted, 
                    string SEA_theTVDB_ID, 
                    string SEA_imdb_ID, 
                    string SEA_SER, 
                    string SEA_Name_German, 
                    string SEA_Name_English, 
                    global::System.Nullable<int> SEA_Number, 
                    global::System.Nullable<int> SEA_OrderNumber, 
                    global::System.Nullable<int> SEA_EpisodesCount, 
                    string SEA_Description_German, 
                    string SEA_Description_English, 
                    string SEA_NumberText, 
                    string Original_SEA_ID, 
                    System.DateTime Original_SEA_Created, 
                    global::System.Nullable<global::System.DateTime> Original_SEA_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_SEA_Deleted, 
                    string Original_SEA_theTVDB_ID, 
                    string Original_SEA_imdb_ID, 
                    string Original_SEA_SER, 
                    string Original_SEA_Name_German, 
                    string Original_SEA_Name_English, 
                    global::System.Nullable<int> Original_SEA_Number, 
                    global::System.Nullable<int> Original_SEA_OrderNumber, 
                    global::System.Nullable<int> Original_SEA_EpisodesCount, 
                    string Original_SEA_NumberText) {
            return this.Update(Original_SEA_ID, SEA_Created, SEA_Changed, SEA_Deleted, SEA_theTVDB_ID, SEA_imdb_ID, SEA_SER, SEA_Name_German, SEA_Name_English, SEA_Number, SEA_OrderNumber, SEA_EpisodesCount, SEA_Description_German, SEA_Description_English, SEA_NumberText, Original_SEA_ID, Original_SEA_Created, Original_SEA_Changed, Original_SEA_Deleted, Original_SEA_theTVDB_ID, Original_SEA_imdb_ID, Original_SEA_SER, Original_SEA_Name_German, Original_SEA_Name_English, Original_SEA_Number, Original_SEA_OrderNumber, Original_SEA_EpisodesCount, Original_SEA_NumberText);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string getSEA_IDwithTHETVDB_ID(string theTVDB_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((theTVDB_ID == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(theTVDB_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EPI_EpisodesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EPI_EpisodesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EPI_Episodes";
            tableMapping.ColumnMappings.Add("EPI_ID", "EPI_ID");
            tableMapping.ColumnMappings.Add("EPI_Created", "EPI_Created");
            tableMapping.ColumnMappings.Add("EPI_Changed", "EPI_Changed");
            tableMapping.ColumnMappings.Add("EPI_Deleted", "EPI_Deleted");
            tableMapping.ColumnMappings.Add("EPI_theTVDB_ID", "EPI_theTVDB_ID");
            tableMapping.ColumnMappings.Add("EPI_imdb_ID", "EPI_imdb_ID");
            tableMapping.ColumnMappings.Add("EPI_SEA", "EPI_SEA");
            tableMapping.ColumnMappings.Add("EPI_Name_German", "EPI_Name_German");
            tableMapping.ColumnMappings.Add("EPI_Name_English", "EPI_Name_English");
            tableMapping.ColumnMappings.Add("EPI_DescriptionShort_German", "EPI_DescriptionShort_German");
            tableMapping.ColumnMappings.Add("EPI_DescriptionShort_English", "EPI_DescriptionShort_English");
            tableMapping.ColumnMappings.Add("EPI_Description_German", "EPI_Description_German");
            tableMapping.ColumnMappings.Add("EPI_Description_English", "EPI_Description_English");
            tableMapping.ColumnMappings.Add("EPI_FirstAired_German", "EPI_FirstAired_German");
            tableMapping.ColumnMappings.Add("EPI_FirstAired_English", "EPI_FirstAired_English");
            tableMapping.ColumnMappings.Add("EPI_Rate", "EPI_Rate");
            tableMapping.ColumnMappings.Add("EPI_RateCount", "EPI_RateCount");
            tableMapping.ColumnMappings.Add("EPI_imdb_Rate", "EPI_imdb_Rate");
            tableMapping.ColumnMappings.Add("EPI_imdb_RateCount", "EPI_imdb_RateCount");
            tableMapping.ColumnMappings.Add("EPI_WatchedCount", "EPI_WatchedCount");
            tableMapping.ColumnMappings.Add("EPI_Number", "EPI_Number");
            tableMapping.ColumnMappings.Add("EPI_NumberOfSeason", "EPI_NumberOfSeason");
            tableMapping.ColumnMappings.Add("EPI_NumberText", "EPI_NumberText");
            tableMapping.ColumnMappings.Add("EPI_Languages", "EPI_Languages");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[EPI_Episodes] WHERE (([EPI_ID] = @Original_EPI_ID) AND ([EPI_C" +
                "reated] = @Original_EPI_Created) AND ((@IsNull_EPI_Changed = 1 AND [EPI_Changed]" +
                " IS NULL) OR ([EPI_Changed] = @Original_EPI_Changed)) AND ((@IsNull_EPI_Deleted " +
                "= 1 AND [EPI_Deleted] IS NULL) OR ([EPI_Deleted] = @Original_EPI_Deleted)) AND (" +
                "(@IsNull_EPI_theTVDB_ID = 1 AND [EPI_theTVDB_ID] IS NULL) OR ([EPI_theTVDB_ID] =" +
                " @Original_EPI_theTVDB_ID)) AND ((@IsNull_EPI_imdb_ID = 1 AND [EPI_imdb_ID] IS N" +
                "ULL) OR ([EPI_imdb_ID] = @Original_EPI_imdb_ID)) AND ((@IsNull_EPI_SEA = 1 AND [" +
                "EPI_SEA] IS NULL) OR ([EPI_SEA] = @Original_EPI_SEA)) AND ((@IsNull_EPI_Name_Ger" +
                "man = 1 AND [EPI_Name_German] IS NULL) OR ([EPI_Name_German] = @Original_EPI_Nam" +
                "e_German)) AND ((@IsNull_EPI_Name_English = 1 AND [EPI_Name_English] IS NULL) OR" +
                " ([EPI_Name_English] = @Original_EPI_Name_English)) AND ((@IsNull_EPI_FirstAired" +
                "_German = 1 AND [EPI_FirstAired_German] IS NULL) OR ([EPI_FirstAired_German] = @" +
                "Original_EPI_FirstAired_German)) AND ((@IsNull_EPI_FirstAired_English = 1 AND [E" +
                "PI_FirstAired_English] IS NULL) OR ([EPI_FirstAired_English] = @Original_EPI_Fir" +
                "stAired_English)) AND ((@IsNull_EPI_Rate = 1 AND [EPI_Rate] IS NULL) OR ([EPI_Ra" +
                "te] = @Original_EPI_Rate)) AND ((@IsNull_EPI_RateCount = 1 AND [EPI_RateCount] I" +
                "S NULL) OR ([EPI_RateCount] = @Original_EPI_RateCount)) AND ((@IsNull_EPI_imdb_R" +
                "ate = 1 AND [EPI_imdb_Rate] IS NULL) OR ([EPI_imdb_Rate] = @Original_EPI_imdb_Ra" +
                "te)) AND ((@IsNull_EPI_imdb_RateCount = 1 AND [EPI_imdb_RateCount] IS NULL) OR (" +
                "[EPI_imdb_RateCount] = @Original_EPI_imdb_RateCount)) AND ((@IsNull_EPI_WatchedC" +
                "ount = 1 AND [EPI_WatchedCount] IS NULL) OR ([EPI_WatchedCount] = @Original_EPI_" +
                "WatchedCount)) AND ((@IsNull_EPI_Number = 1 AND [EPI_Number] IS NULL) OR ([EPI_N" +
                "umber] = @Original_EPI_Number)) AND ((@IsNull_EPI_NumberOfSeason = 1 AND [EPI_Nu" +
                "mberOfSeason] IS NULL) OR ([EPI_NumberOfSeason] = @Original_EPI_NumberOfSeason))" +
                " AND ((@IsNull_EPI_NumberText = 1 AND [EPI_NumberText] IS NULL) OR ([EPI_NumberT" +
                "ext] = @Original_EPI_NumberText)) AND ((@IsNull_EPI_Languages = 1 AND [EPI_Langu" +
                "ages] IS NULL) OR ([EPI_Languages] = @Original_EPI_Languages)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Changed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Changed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Changed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_theTVDB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_imdb_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_SEA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_SEA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Name_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Name_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_FirstAired_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_FirstAired_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_imdb_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_WatchedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_WatchedCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_WatchedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_WatchedCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_NumberOfSeason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberOfSeason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_NumberOfSeason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberOfSeason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_NumberText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Languages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Languages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Languages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EPI_Episodes] ([EPI_ID], [EPI_Created], [EPI_Changed], [EPI_Deleted], [EPI_theTVDB_ID], [EPI_imdb_ID], [EPI_SEA], [EPI_Name_German], [EPI_Name_English], [EPI_DescriptionShort_German], [EPI_DescriptionShort_English], [EPI_Description_German], [EPI_Description_English], [EPI_FirstAired_German], [EPI_FirstAired_English], [EPI_Rate], [EPI_RateCount], [EPI_imdb_Rate], [EPI_imdb_RateCount], [EPI_WatchedCount], [EPI_Number], [EPI_NumberOfSeason], [EPI_NumberText], [EPI_Languages]) VALUES (@EPI_ID, @EPI_Created, @EPI_Changed, @EPI_Deleted, @EPI_theTVDB_ID, @EPI_imdb_ID, @EPI_SEA, @EPI_Name_German, @EPI_Name_English, @EPI_DescriptionShort_German, @EPI_DescriptionShort_English, @EPI_Description_German, @EPI_Description_English, @EPI_FirstAired_German, @EPI_FirstAired_English, @EPI_Rate, @EPI_RateCount, @EPI_imdb_Rate, @EPI_imdb_RateCount, @EPI_WatchedCount, @EPI_Number, @EPI_NumberOfSeason, @EPI_NumberText, @EPI_Languages);
SELECT EPI_ID, EPI_Created, EPI_Changed, EPI_Deleted, EPI_theTVDB_ID, EPI_imdb_ID, EPI_SEA, EPI_Name_German, EPI_Name_English, EPI_DescriptionShort_German, EPI_DescriptionShort_English, EPI_Description_German, EPI_Description_English, EPI_FirstAired_German, EPI_FirstAired_English, EPI_Rate, EPI_RateCount, EPI_imdb_Rate, EPI_imdb_RateCount, EPI_WatchedCount, EPI_Number, EPI_NumberOfSeason, EPI_NumberText, EPI_Languages FROM EPI_Episodes WHERE (EPI_ID = @EPI_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Changed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_SEA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_DescriptionShort_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_DescriptionShort_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_DescriptionShort_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_DescriptionShort_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Description_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Description_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Description_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Description_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_WatchedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_WatchedCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_NumberOfSeason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberOfSeason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Languages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[EPI_Episodes] SET [EPI_ID] = @EPI_ID, [EPI_Created] = @EPI_Created," +
                " [EPI_Changed] = @EPI_Changed, [EPI_Deleted] = @EPI_Deleted, [EPI_theTVDB_ID] = " +
                "@EPI_theTVDB_ID, [EPI_imdb_ID] = @EPI_imdb_ID, [EPI_SEA] = @EPI_SEA, [EPI_Name_G" +
                "erman] = @EPI_Name_German, [EPI_Name_English] = @EPI_Name_English, [EPI_Descript" +
                "ionShort_German] = @EPI_DescriptionShort_German, [EPI_DescriptionShort_English] " +
                "= @EPI_DescriptionShort_English, [EPI_Description_German] = @EPI_Description_Ger" +
                "man, [EPI_Description_English] = @EPI_Description_English, [EPI_FirstAired_Germa" +
                "n] = @EPI_FirstAired_German, [EPI_FirstAired_English] = @EPI_FirstAired_English," +
                " [EPI_Rate] = @EPI_Rate, [EPI_RateCount] = @EPI_RateCount, [EPI_imdb_Rate] = @EP" +
                "I_imdb_Rate, [EPI_imdb_RateCount] = @EPI_imdb_RateCount, [EPI_WatchedCount] = @E" +
                "PI_WatchedCount, [EPI_Number] = @EPI_Number, [EPI_NumberOfSeason] = @EPI_NumberO" +
                "fSeason, [EPI_NumberText] = @EPI_NumberText, [EPI_Languages] = @EPI_Languages WH" +
                "ERE (([EPI_ID] = @Original_EPI_ID) AND ([EPI_Created] = @Original_EPI_Created) A" +
                "ND ((@IsNull_EPI_Changed = 1 AND [EPI_Changed] IS NULL) OR ([EPI_Changed] = @Ori" +
                "ginal_EPI_Changed)) AND ((@IsNull_EPI_Deleted = 1 AND [EPI_Deleted] IS NULL) OR " +
                "([EPI_Deleted] = @Original_EPI_Deleted)) AND ((@IsNull_EPI_theTVDB_ID = 1 AND [E" +
                "PI_theTVDB_ID] IS NULL) OR ([EPI_theTVDB_ID] = @Original_EPI_theTVDB_ID)) AND ((" +
                "@IsNull_EPI_imdb_ID = 1 AND [EPI_imdb_ID] IS NULL) OR ([EPI_imdb_ID] = @Original" +
                "_EPI_imdb_ID)) AND ((@IsNull_EPI_SEA = 1 AND [EPI_SEA] IS NULL) OR ([EPI_SEA] = " +
                "@Original_EPI_SEA)) AND ((@IsNull_EPI_Name_German = 1 AND [EPI_Name_German] IS N" +
                "ULL) OR ([EPI_Name_German] = @Original_EPI_Name_German)) AND ((@IsNull_EPI_Name_" +
                "English = 1 AND [EPI_Name_English] IS NULL) OR ([EPI_Name_English] = @Original_E" +
                "PI_Name_English)) AND ((@IsNull_EPI_FirstAired_German = 1 AND [EPI_FirstAired_Ge" +
                "rman] IS NULL) OR ([EPI_FirstAired_German] = @Original_EPI_FirstAired_German)) A" +
                "ND ((@IsNull_EPI_FirstAired_English = 1 AND [EPI_FirstAired_English] IS NULL) OR" +
                " ([EPI_FirstAired_English] = @Original_EPI_FirstAired_English)) AND ((@IsNull_EP" +
                "I_Rate = 1 AND [EPI_Rate] IS NULL) OR ([EPI_Rate] = @Original_EPI_Rate)) AND ((@" +
                "IsNull_EPI_RateCount = 1 AND [EPI_RateCount] IS NULL) OR ([EPI_RateCount] = @Ori" +
                "ginal_EPI_RateCount)) AND ((@IsNull_EPI_imdb_Rate = 1 AND [EPI_imdb_Rate] IS NUL" +
                "L) OR ([EPI_imdb_Rate] = @Original_EPI_imdb_Rate)) AND ((@IsNull_EPI_imdb_RateCo" +
                "unt = 1 AND [EPI_imdb_RateCount] IS NULL) OR ([EPI_imdb_RateCount] = @Original_E" +
                "PI_imdb_RateCount)) AND ((@IsNull_EPI_WatchedCount = 1 AND [EPI_WatchedCount] IS" +
                " NULL) OR ([EPI_WatchedCount] = @Original_EPI_WatchedCount)) AND ((@IsNull_EPI_N" +
                "umber = 1 AND [EPI_Number] IS NULL) OR ([EPI_Number] = @Original_EPI_Number)) AN" +
                "D ((@IsNull_EPI_NumberOfSeason = 1 AND [EPI_NumberOfSeason] IS NULL) OR ([EPI_Nu" +
                "mberOfSeason] = @Original_EPI_NumberOfSeason)) AND ((@IsNull_EPI_NumberText = 1 " +
                "AND [EPI_NumberText] IS NULL) OR ([EPI_NumberText] = @Original_EPI_NumberText)) " +
                "AND ((@IsNull_EPI_Languages = 1 AND [EPI_Languages] IS NULL) OR ([EPI_Languages]" +
                " = @Original_EPI_Languages)));\r\nSELECT EPI_ID, EPI_Created, EPI_Changed, EPI_Del" +
                "eted, EPI_theTVDB_ID, EPI_imdb_ID, EPI_SEA, EPI_Name_German, EPI_Name_English, E" +
                "PI_DescriptionShort_German, EPI_DescriptionShort_English, EPI_Description_German" +
                ", EPI_Description_English, EPI_FirstAired_German, EPI_FirstAired_English, EPI_Ra" +
                "te, EPI_RateCount, EPI_imdb_Rate, EPI_imdb_RateCount, EPI_WatchedCount, EPI_Numb" +
                "er, EPI_NumberOfSeason, EPI_NumberText, EPI_Languages FROM EPI_Episodes WHERE (E" +
                "PI_ID = @EPI_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Changed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_SEA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_DescriptionShort_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_DescriptionShort_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_DescriptionShort_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_DescriptionShort_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Description_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Description_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Description_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Description_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_German", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_English", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_Rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_RateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_WatchedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_WatchedCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_NumberOfSeason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberOfSeason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPI_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Languages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Created", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Changed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Changed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Changed", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Changed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Deleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Deleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Deleted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Deleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_theTVDB_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_theTVDB_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_imdb_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_imdb_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_SEA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_SEA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Name_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Name_German", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Name_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Name_English", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Name_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_FirstAired_German", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_German", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_FirstAired_German", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_German", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_FirstAired_English", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_English", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_FirstAired_English", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_FirstAired_English", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_imdb_Rate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_Rate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_imdb_Rate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_Rate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_RateCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_imdb_RateCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_imdb_RateCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_WatchedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_WatchedCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_WatchedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_WatchedCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_NumberOfSeason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberOfSeason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_NumberOfSeason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberOfSeason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_NumberText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_NumberText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_NumberText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPI_Languages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Languages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPI_Languages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_Languages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Interface_TheTvDB.Properties.Settings.Default.dbSeriesConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT EPI_ID, EPI_Created, EPI_Changed, EPI_Deleted, EPI_theTVDB_ID, EPI_imdb_ID, EPI_SEA, EPI_Name_German, EPI_Name_English, EPI_DescriptionShort_German, EPI_DescriptionShort_English, EPI_Description_German, EPI_Description_English, EPI_FirstAired_German, EPI_FirstAired_English, EPI_Rate, EPI_RateCount, EPI_imdb_Rate, EPI_imdb_RateCount, EPI_WatchedCount, EPI_Number, EPI_NumberOfSeason, EPI_NumberText, EPI_Languages FROM dbo.EPI_Episodes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT EPI_ID, EPI_Created, EPI_Changed, EPI_Deleted, EPI_theTVDB_ID, EPI_imdb_ID, EPI_SEA, EPI_Name_German, EPI_Name_English, EPI_DescriptionShort_German, EPI_DescriptionShort_English, EPI_Description_German, EPI_Description_English, EPI_FirstAired_German, EPI_FirstAired_English, EPI_Rate, EPI_RateCount, EPI_imdb_Rate, EPI_imdb_RateCount, EPI_WatchedCount, EPI_Number, EPI_NumberOfSeason, EPI_NumberText, EPI_Languages FROM dbo.EPI_Episodes
WHERE (epi_id = @id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT EPI_ID, EPI_Created, EPI_Changed, EPI_Deleted, EPI_theTVDB_ID, EPI_imdb_ID, EPI_SEA, EPI_Name_German, EPI_Name_English, EPI_DescriptionShort_German, EPI_DescriptionShort_English, EPI_Description_German, EPI_Description_English, EPI_FirstAired_German, EPI_FirstAired_English, EPI_Rate, EPI_RateCount, EPI_imdb_Rate, EPI_imdb_RateCount, EPI_WatchedCount, EPI_Number, EPI_NumberOfSeason, EPI_NumberText, EPI_Languages FROM dbo.EPI_Episodes
where EPI_SEA = @SEA";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEA", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_SEA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT EPI_id FROM EPI_Episodes\r\nwhere epi_theTVDB_ID = @theTvDB_ID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@theTvDB_ID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "EPI_theTVDB_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSeries.EPI_EpisodesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSeries.EPI_EpisodesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSeries.EPI_EpisodesDataTable dataTable = new dsSeries.EPI_EpisodesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(dsSeries.EPI_EpisodesDataTable dataTable, string id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(id));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsSeries.EPI_EpisodesDataTable GetDataByID(string id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(id));
            }
            dsSeries.EPI_EpisodesDataTable dataTable = new dsSeries.EPI_EpisodesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySEA(dsSeries.EPI_EpisodesDataTable dataTable, string SEA) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((SEA == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(SEA));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsSeries.EPI_EpisodesDataTable GetDataBySEA(string SEA) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((SEA == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(SEA));
            }
            dsSeries.EPI_EpisodesDataTable dataTable = new dsSeries.EPI_EpisodesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSeries.EPI_EpisodesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSeries dataSet) {
            return this.Adapter.Update(dataSet, "EPI_Episodes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_EPI_ID, 
                    System.DateTime Original_EPI_Created, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_Deleted, 
                    string Original_EPI_theTVDB_ID, 
                    string Original_EPI_imdb_ID, 
                    string Original_EPI_SEA, 
                    string Original_EPI_Name_German, 
                    string Original_EPI_Name_English, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_FirstAired_English, 
                    global::System.Nullable<double> Original_EPI_Rate, 
                    global::System.Nullable<int> Original_EPI_RateCount, 
                    global::System.Nullable<double> Original_EPI_imdb_Rate, 
                    global::System.Nullable<int> Original_EPI_imdb_RateCount, 
                    global::System.Nullable<int> Original_EPI_WatchedCount, 
                    global::System.Nullable<int> Original_EPI_Number, 
                    global::System.Nullable<int> Original_EPI_NumberOfSeason, 
                    string Original_EPI_NumberText, 
                    string Original_EPI_Languages) {
            if ((Original_EPI_ID == null)) {
                throw new global::System.ArgumentNullException("Original_EPI_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_EPI_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_EPI_Created));
            if ((Original_EPI_Changed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_EPI_Changed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_Deleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_EPI_Deleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_theTVDB_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_EPI_theTVDB_ID));
            }
            if ((Original_EPI_imdb_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_EPI_imdb_ID));
            }
            if ((Original_EPI_SEA == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_EPI_SEA));
            }
            if ((Original_EPI_Name_German == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_EPI_Name_German));
            }
            if ((Original_EPI_Name_English == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_EPI_Name_English));
            }
            if ((Original_EPI_FirstAired_German.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_EPI_FirstAired_German.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_FirstAired_English.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_EPI_FirstAired_English.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_Rate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_EPI_Rate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_RateCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_EPI_RateCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_imdb_Rate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_EPI_imdb_Rate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_imdb_RateCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_EPI_imdb_RateCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_WatchedCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_EPI_WatchedCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_Number.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_EPI_Number.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_NumberOfSeason.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_EPI_NumberOfSeason.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_NumberText == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_EPI_NumberText));
            }
            if ((Original_EPI_Languages == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_EPI_Languages));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string EPI_ID, 
                    System.DateTime EPI_Created, 
                    global::System.Nullable<global::System.DateTime> EPI_Changed, 
                    global::System.Nullable<global::System.DateTime> EPI_Deleted, 
                    string EPI_theTVDB_ID, 
                    string EPI_imdb_ID, 
                    string EPI_SEA, 
                    string EPI_Name_German, 
                    string EPI_Name_English, 
                    string EPI_DescriptionShort_German, 
                    string EPI_DescriptionShort_English, 
                    string EPI_Description_German, 
                    string EPI_Description_English, 
                    global::System.Nullable<global::System.DateTime> EPI_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> EPI_FirstAired_English, 
                    global::System.Nullable<double> EPI_Rate, 
                    global::System.Nullable<int> EPI_RateCount, 
                    global::System.Nullable<double> EPI_imdb_Rate, 
                    global::System.Nullable<int> EPI_imdb_RateCount, 
                    global::System.Nullable<int> EPI_WatchedCount, 
                    global::System.Nullable<int> EPI_Number, 
                    global::System.Nullable<int> EPI_NumberOfSeason, 
                    string EPI_NumberText, 
                    string EPI_Languages) {
            if ((EPI_ID == null)) {
                throw new global::System.ArgumentNullException("EPI_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EPI_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(EPI_Created));
            if ((EPI_Changed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EPI_Changed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EPI_Deleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(EPI_Deleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((EPI_theTVDB_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EPI_theTVDB_ID));
            }
            if ((EPI_imdb_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(EPI_imdb_ID));
            }
            if ((EPI_SEA == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(EPI_SEA));
            }
            if ((EPI_Name_German == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EPI_Name_German));
            }
            if ((EPI_Name_English == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(EPI_Name_English));
            }
            if ((EPI_DescriptionShort_German == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EPI_DescriptionShort_German));
            }
            if ((EPI_DescriptionShort_English == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(EPI_DescriptionShort_English));
            }
            if ((EPI_Description_German == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EPI_Description_German));
            }
            if ((EPI_Description_English == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EPI_Description_English));
            }
            if ((EPI_FirstAired_German.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(EPI_FirstAired_German.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((EPI_FirstAired_English.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(EPI_FirstAired_English.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((EPI_Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(EPI_Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((EPI_RateCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(EPI_RateCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EPI_imdb_Rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(EPI_imdb_Rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((EPI_imdb_RateCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(EPI_imdb_RateCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((EPI_WatchedCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(EPI_WatchedCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((EPI_Number.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(EPI_Number.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((EPI_NumberOfSeason.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(EPI_NumberOfSeason.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((EPI_NumberText == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(EPI_NumberText));
            }
            if ((EPI_Languages == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(EPI_Languages));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EPI_ID, 
                    System.DateTime EPI_Created, 
                    global::System.Nullable<global::System.DateTime> EPI_Changed, 
                    global::System.Nullable<global::System.DateTime> EPI_Deleted, 
                    string EPI_theTVDB_ID, 
                    string EPI_imdb_ID, 
                    string EPI_SEA, 
                    string EPI_Name_German, 
                    string EPI_Name_English, 
                    string EPI_DescriptionShort_German, 
                    string EPI_DescriptionShort_English, 
                    string EPI_Description_German, 
                    string EPI_Description_English, 
                    global::System.Nullable<global::System.DateTime> EPI_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> EPI_FirstAired_English, 
                    global::System.Nullable<double> EPI_Rate, 
                    global::System.Nullable<int> EPI_RateCount, 
                    global::System.Nullable<double> EPI_imdb_Rate, 
                    global::System.Nullable<int> EPI_imdb_RateCount, 
                    global::System.Nullable<int> EPI_WatchedCount, 
                    global::System.Nullable<int> EPI_Number, 
                    global::System.Nullable<int> EPI_NumberOfSeason, 
                    string EPI_NumberText, 
                    string EPI_Languages, 
                    string Original_EPI_ID, 
                    System.DateTime Original_EPI_Created, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_Deleted, 
                    string Original_EPI_theTVDB_ID, 
                    string Original_EPI_imdb_ID, 
                    string Original_EPI_SEA, 
                    string Original_EPI_Name_German, 
                    string Original_EPI_Name_English, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_FirstAired_English, 
                    global::System.Nullable<double> Original_EPI_Rate, 
                    global::System.Nullable<int> Original_EPI_RateCount, 
                    global::System.Nullable<double> Original_EPI_imdb_Rate, 
                    global::System.Nullable<int> Original_EPI_imdb_RateCount, 
                    global::System.Nullable<int> Original_EPI_WatchedCount, 
                    global::System.Nullable<int> Original_EPI_Number, 
                    global::System.Nullable<int> Original_EPI_NumberOfSeason, 
                    string Original_EPI_NumberText, 
                    string Original_EPI_Languages) {
            if ((EPI_ID == null)) {
                throw new global::System.ArgumentNullException("EPI_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EPI_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(EPI_Created));
            if ((EPI_Changed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EPI_Changed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EPI_Deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(EPI_Deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((EPI_theTVDB_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EPI_theTVDB_ID));
            }
            if ((EPI_imdb_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(EPI_imdb_ID));
            }
            if ((EPI_SEA == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(EPI_SEA));
            }
            if ((EPI_Name_German == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EPI_Name_German));
            }
            if ((EPI_Name_English == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(EPI_Name_English));
            }
            if ((EPI_DescriptionShort_German == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EPI_DescriptionShort_German));
            }
            if ((EPI_DescriptionShort_English == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(EPI_DescriptionShort_English));
            }
            if ((EPI_Description_German == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EPI_Description_German));
            }
            if ((EPI_Description_English == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EPI_Description_English));
            }
            if ((EPI_FirstAired_German.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(EPI_FirstAired_German.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((EPI_FirstAired_English.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(EPI_FirstAired_English.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((EPI_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(EPI_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((EPI_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(EPI_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EPI_imdb_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(EPI_imdb_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((EPI_imdb_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(EPI_imdb_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((EPI_WatchedCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(EPI_WatchedCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((EPI_Number.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(EPI_Number.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((EPI_NumberOfSeason.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(EPI_NumberOfSeason.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((EPI_NumberText == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(EPI_NumberText));
            }
            if ((EPI_Languages == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(EPI_Languages));
            }
            if ((Original_EPI_ID == null)) {
                throw new global::System.ArgumentNullException("Original_EPI_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_EPI_ID));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_EPI_Created));
            if ((Original_EPI_Changed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_EPI_Changed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_Deleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_EPI_Deleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_theTVDB_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_EPI_theTVDB_ID));
            }
            if ((Original_EPI_imdb_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_EPI_imdb_ID));
            }
            if ((Original_EPI_SEA == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_EPI_SEA));
            }
            if ((Original_EPI_Name_German == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_EPI_Name_German));
            }
            if ((Original_EPI_Name_English == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_EPI_Name_English));
            }
            if ((Original_EPI_FirstAired_German.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_EPI_FirstAired_German.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_FirstAired_English.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_EPI_FirstAired_English.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_EPI_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_EPI_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_imdb_Rate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_EPI_imdb_Rate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_imdb_RateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_EPI_imdb_RateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_WatchedCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_EPI_WatchedCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_Number.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(Original_EPI_Number.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_NumberOfSeason.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_EPI_NumberOfSeason.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_EPI_NumberText == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_EPI_NumberText));
            }
            if ((Original_EPI_Languages == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_EPI_Languages));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime EPI_Created, 
                    global::System.Nullable<global::System.DateTime> EPI_Changed, 
                    global::System.Nullable<global::System.DateTime> EPI_Deleted, 
                    string EPI_theTVDB_ID, 
                    string EPI_imdb_ID, 
                    string EPI_SEA, 
                    string EPI_Name_German, 
                    string EPI_Name_English, 
                    string EPI_DescriptionShort_German, 
                    string EPI_DescriptionShort_English, 
                    string EPI_Description_German, 
                    string EPI_Description_English, 
                    global::System.Nullable<global::System.DateTime> EPI_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> EPI_FirstAired_English, 
                    global::System.Nullable<double> EPI_Rate, 
                    global::System.Nullable<int> EPI_RateCount, 
                    global::System.Nullable<double> EPI_imdb_Rate, 
                    global::System.Nullable<int> EPI_imdb_RateCount, 
                    global::System.Nullable<int> EPI_WatchedCount, 
                    global::System.Nullable<int> EPI_Number, 
                    global::System.Nullable<int> EPI_NumberOfSeason, 
                    string EPI_NumberText, 
                    string EPI_Languages, 
                    string Original_EPI_ID, 
                    System.DateTime Original_EPI_Created, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_Changed, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_Deleted, 
                    string Original_EPI_theTVDB_ID, 
                    string Original_EPI_imdb_ID, 
                    string Original_EPI_SEA, 
                    string Original_EPI_Name_German, 
                    string Original_EPI_Name_English, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_FirstAired_German, 
                    global::System.Nullable<global::System.DateTime> Original_EPI_FirstAired_English, 
                    global::System.Nullable<double> Original_EPI_Rate, 
                    global::System.Nullable<int> Original_EPI_RateCount, 
                    global::System.Nullable<double> Original_EPI_imdb_Rate, 
                    global::System.Nullable<int> Original_EPI_imdb_RateCount, 
                    global::System.Nullable<int> Original_EPI_WatchedCount, 
                    global::System.Nullable<int> Original_EPI_Number, 
                    global::System.Nullable<int> Original_EPI_NumberOfSeason, 
                    string Original_EPI_NumberText, 
                    string Original_EPI_Languages) {
            return this.Update(Original_EPI_ID, EPI_Created, EPI_Changed, EPI_Deleted, EPI_theTVDB_ID, EPI_imdb_ID, EPI_SEA, EPI_Name_German, EPI_Name_English, EPI_DescriptionShort_German, EPI_DescriptionShort_English, EPI_Description_German, EPI_Description_English, EPI_FirstAired_German, EPI_FirstAired_English, EPI_Rate, EPI_RateCount, EPI_imdb_Rate, EPI_imdb_RateCount, EPI_WatchedCount, EPI_Number, EPI_NumberOfSeason, EPI_NumberText, EPI_Languages, Original_EPI_ID, Original_EPI_Created, Original_EPI_Changed, Original_EPI_Deleted, Original_EPI_theTVDB_ID, Original_EPI_imdb_ID, Original_EPI_SEA, Original_EPI_Name_German, Original_EPI_Name_English, Original_EPI_FirstAired_German, Original_EPI_FirstAired_English, Original_EPI_Rate, Original_EPI_RateCount, Original_EPI_imdb_Rate, Original_EPI_imdb_RateCount, Original_EPI_WatchedCount, Original_EPI_Number, Original_EPI_NumberOfSeason, Original_EPI_NumberText, Original_EPI_Languages);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string getEPI_IDwithTHETVDB_ID(string theTvDB_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((theTvDB_ID == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(theTvDB_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SER_SeriesTableAdapter _sER_SeriesTableAdapter;
        
        private SEA_SeasonsTableAdapter _sEA_SeasonsTableAdapter;
        
        private EPI_EpisodesTableAdapter _ePI_EpisodesTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SER_SeriesTableAdapter SER_SeriesTableAdapter {
            get {
                return this._sER_SeriesTableAdapter;
            }
            set {
                this._sER_SeriesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SEA_SeasonsTableAdapter SEA_SeasonsTableAdapter {
            get {
                return this._sEA_SeasonsTableAdapter;
            }
            set {
                this._sEA_SeasonsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EPI_EpisodesTableAdapter EPI_EpisodesTableAdapter {
            get {
                return this._ePI_EpisodesTableAdapter;
            }
            set {
                this._ePI_EpisodesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sER_SeriesTableAdapter != null) 
                            && (this._sER_SeriesTableAdapter.Connection != null))) {
                    return this._sER_SeriesTableAdapter.Connection;
                }
                if (((this._sEA_SeasonsTableAdapter != null) 
                            && (this._sEA_SeasonsTableAdapter.Connection != null))) {
                    return this._sEA_SeasonsTableAdapter.Connection;
                }
                if (((this._ePI_EpisodesTableAdapter != null) 
                            && (this._ePI_EpisodesTableAdapter.Connection != null))) {
                    return this._ePI_EpisodesTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sER_SeriesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sEA_SeasonsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ePI_EpisodesTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsSeries dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sER_SeriesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SER_Series.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sER_SeriesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sEA_SeasonsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SEA_Seasons.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sEA_SeasonsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ePI_EpisodesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EPI_Episodes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ePI_EpisodesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsSeries dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sER_SeriesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SER_Series.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sER_SeriesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sEA_SeasonsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SEA_Seasons.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sEA_SeasonsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ePI_EpisodesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EPI_Episodes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ePI_EpisodesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsSeries dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._ePI_EpisodesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EPI_Episodes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ePI_EpisodesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sEA_SeasonsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SEA_Seasons.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sEA_SeasonsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sER_SeriesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SER_Series.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sER_SeriesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsSeries dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sER_SeriesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sER_SeriesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus" +
                        "s die gleiche Verbindungszeichenfolge verwendet werden.");
            }
            if (((this._sEA_SeasonsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sEA_SeasonsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus" +
                        "s die gleiche Verbindungszeichenfolge verwendet werden.");
            }
            if (((this._ePI_EpisodesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ePI_EpisodesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus" +
                        "s die gleiche Verbindungszeichenfolge verwendet werden.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA" +
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes" +
                        "t.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst" +
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt" +
                        "ion nicht zu.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sER_SeriesTableAdapter != null)) {
                    revertConnections.Add(this._sER_SeriesTableAdapter, this._sER_SeriesTableAdapter.Connection);
                    this._sER_SeriesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sER_SeriesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sER_SeriesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sER_SeriesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sER_SeriesTableAdapter.Adapter);
                    }
                }
                if ((this._sEA_SeasonsTableAdapter != null)) {
                    revertConnections.Add(this._sEA_SeasonsTableAdapter, this._sEA_SeasonsTableAdapter.Connection);
                    this._sEA_SeasonsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sEA_SeasonsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sEA_SeasonsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sEA_SeasonsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sEA_SeasonsTableAdapter.Adapter);
                    }
                }
                if ((this._ePI_EpisodesTableAdapter != null)) {
                    revertConnections.Add(this._ePI_EpisodesTableAdapter, this._ePI_EpisodesTableAdapter.Connection);
                    this._ePI_EpisodesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ePI_EpisodesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ePI_EpisodesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ePI_EpisodesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ePI_EpisodesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sER_SeriesTableAdapter != null)) {
                    this._sER_SeriesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sER_SeriesTableAdapter]));
                    this._sER_SeriesTableAdapter.Transaction = null;
                }
                if ((this._sEA_SeasonsTableAdapter != null)) {
                    this._sEA_SeasonsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sEA_SeasonsTableAdapter]));
                    this._sEA_SeasonsTableAdapter.Transaction = null;
                }
                if ((this._ePI_EpisodesTableAdapter != null)) {
                    this._ePI_EpisodesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ePI_EpisodesTableAdapter]));
                    this._ePI_EpisodesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591